{
	"version": 1,
	"collections": [
		{
			"id": "01800491-c61a-ebc5-8b04-f12813132868",
			"name": "Unhaggle",
			"description": "",
			"auth": null,
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"id": "3c1212fa-27fe-45bc-8564-78a8e2ed0473",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "34ebe0da-839a-4c38-9ad5-985c761bfc86",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"variables": [
				{
					"key": "Unhaggle_Api-key",
					"value": "gnr8r:M_YH_QXnV4xOzqNPJwv62A-GO_o",
					"description": "",
					"type": "text",
					"disabled": false
				}
			],
			"order": [
				"3176e65a-136b-d619-22cc-1299b39e485c",
				"2ce372b9-66a0-4fcd-991a-99b9634402b0",
				"23009818-8447-454b-93ed-afd79f6282db"
			],
			"folders_order": [],
			"folders": [],
			"requests": [
				{
					"id": "23009818-8447-454b-93ed-afd79f6282db",
					"name": "Fetch all incentives by uTrimID¶ Copy",
					"url": "http://api.unhaggle.com/api/incentives/fetch/ON/735906618",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Api-Key",
							"value": "{{Unhaggle_Api-key}}",
							"description": "",
							"enabled": true
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "70c58761-e19d-47bc-ba48-1203b91debbb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "01800491-c61a-ebc5-8b04-f12813132868",
					"headers": "Api-Key: {{Unhaggle_Api-key}}\n",
					"pathVariables": {}
				},
				{
					"id": "2ce372b9-66a0-4fcd-991a-99b9634402b0",
					"name": "Fetch all incentives by uTrimID¶ Copy",
					"url": "http://api.unhaggle.com/api/incentives/fetch/all/735906618/",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Api-Key",
							"value": "{{Unhaggle_Api-key}}",
							"description": "",
							"enabled": true
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "2452665b-33a0-4552-8c9b-52595872c9d6",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "01800491-c61a-ebc5-8b04-f12813132868",
					"headers": "Api-Key: {{Unhaggle_Api-key}}\n",
					"pathVariables": {}
				},
				{
					"id": "3176e65a-136b-d619-22cc-1299b39e485c",
					"name": "Fetch all incentives by uTrimID¶",
					"url": "http://api.unhaggle.com/api/incentives/fetch/all/ACU71513/",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Api-Key",
							"value": "{{Unhaggle_Api-key}}",
							"enabled": true
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a6c7424b-2d16-4cae-aaae-2bba5da00e3c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "01800491-c61a-ebc5-8b04-f12813132868",
					"headers": "Api-Key: {{Unhaggle_Api-key}}\n",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "19b4f396-189e-3a1c-c579-17f03e819db1",
			"name": "EasyInsure",
			"description": "",
			"auth": null,
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"id": "86f5b123-430b-4693-9537-c57aea50e68d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "07ee3fe9-f13f-4816-8e2f-16e5d6345230",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"variables": [
				{
					"key": "easyinsure_username",
					"value": "TestAutoLife",
					"type": "text",
					"disabled": false
				},
				{
					"key": "easyinsure_password",
					"value": "TestAuto",
					"type": "text",
					"disabled": false
				},
				{
					"key": "easyinsure_grant_type",
					"value": "password",
					"type": "text",
					"disabled": false
				},
				{
					"key": "easyinsure_access_token",
					"value": "Not set",
					"description": "",
					"type": "text",
					"disabled": false
				}
			],
			"order": [
				"48274d1a-6acc-d1a2-5838-cbd0fa41cca3",
				"33c9036f-cc58-5b70-53dd-7f6587e9a8f7"
			],
			"folders_order": [],
			"folders": [],
			"requests": [
				{
					"id": "33c9036f-cc58-5b70-53dd-7f6587e9a8f7",
					"name": "Quote Price",
					"url": "http://settings.easyinsure.ca/api/AutoLife/1.0/Quote/Price",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "bearer {{easyinsure_access_token}}",
							"description": "",
							"enabled": true
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "noauth"
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "0fff68f5-5e20-4a76-a1f4-44b0b3b88be9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "19b4f396-189e-3a1c-c579-17f03e819db1",
					"rawModeData": "{  \r\n   \"GUID\":\"2697f200-dc3b-4e97-9069-748195f11b22\",\r\n   \"QuoteID\":0,\r\n   \"ID\":0,\r\n   \"ProvinceABBR\":\"ON\",\r\n   \"City\":\"Windsor\",\r\n   \"PostalCode\":\"N9J3G1\",\r\n   \"FSA\":\"N9J\",\r\n   \"LDU\":\"3G1\",\r\n   \"Phone\":\"5198908330\",\r\n   \"Address\":\"test 464\",\r\n   \"FirstName\":null,\r\n   \"LastName\":null,\r\n   \"VehicleInfo\":[  \r\n      {  \r\n         \"VehID\":542938383,\r\n         \"MotorDeductible\":null,\r\n         \"MotorPrimaryUses\":null,\r\n         \"MCDescript\":null,\r\n         \"MCBodyStyleList\":null,\r\n         \"PrimaryUses\":\"1\",\r\n         \"CommercialUseTypes\":null,\r\n         \"GVWs\":null,\r\n         \"MarketValue\":\"44000\",\r\n         \"KMComute\":\"4\",\r\n         \"LiabLimit\":\"2\",\r\n         \"CollisionDeductible\":\"2000000\",\r\n         \"ComprehensiveDeductible\":\"2\",\r\n         \"AllPerilsDeductible\":\"2000000\",\r\n         \"VICC\":\"677607\",\r\n         \"VIN\":\"3GTU2UEC4FG166774\",\r\n         \"Model\":\"SIERRA 1500 CREW CAB 4WD\",\r\n         \"Make\":\"GMC\",\r\n         \"Year\":\"2015\",\r\n         \"PrimaryUse\":\"1\",\r\n         \"PrimaryDriverID\":\"494938383\",\r\n         \"PurchasePrice\":\"44000\",\r\n         \"PurchaseDate\":\"2015-03-01 00:00:00.000\",\r\n         \"NewOld\":false,\r\n         \"WinterTire\":false,\r\n         \"DistanceYearly\":\"12000\",\r\n         \"LossOfUse\":\"1\",\r\n         \"NonOwnedAuto\":\"1\",\r\n         \"WaiverOfDepreciation\":true,\r\n         \"LiabilityLimit\":\"2\",\r\n         \"AccidentWaiver\":true,\r\n         \"LimitedGlassCoverage\":false,\r\n         \"HasAccidentBenefits\":false,\r\n         \"ABIncomeReplacement\":null,\r\n         \"ABIncreasedCare\":null,\r\n         \"ABIncreasedCareInjuries\":null,\r\n         \"ABImpairCoverages\":null,\r\n         \"ABDeathFuneral\":null,\r\n         \"ABDependantCare\":null,\r\n         \"ABIndexationBenifit\":null,\r\n         \"ABOffsetTortDed\":null\r\n      },\r\n      {  \r\n         \"VehID\":542938384,\r\n         \"MotorDeductible\":null,\r\n         \"MotorPrimaryUses\":null,\r\n         \"MCDescript\":null,\r\n         \"MCBodyStyleList\":null,\r\n         \"PrimaryUses\":\"1\",\r\n         \"CommercialUseTypes\":null,\r\n         \"GVWs\":null,\r\n         \"MarketValue\":\"35000\",\r\n         \"KMComute\":\"10\",\r\n         \"LiabLimit\":\"1\",\r\n         \"CollisionDeductible\":\"2000000\",\r\n         \"ComprehensiveDeductible\":\"1\",\r\n         \"AllPerilsDeductible\":\"2000000\",\r\n         \"VICC\":\"025808\",\r\n         \"VIN\":\"2HGFC3A59HH750518\",\r\n         \"Model\":\"CIVIC EX 2DR COUPE\",\r\n         \"Make\":\"HONDA\",\r\n         \"Year\":\"2017\",\r\n         \"PrimaryUse\":\"1\",\r\n         \"PrimaryDriverID\":\"494938384\",\r\n         \"PurchasePrice\":\"42500\",\r\n         \"PurchaseDate\":\"2015-03-01 00:00:00.000\",\r\n         \"NewOld\":false,\r\n         \"WinterTire\":false,\r\n         \"DistanceYearly\":\"24000\",\r\n         \"LossOfUse\":\"1\",\r\n         \"NonOwnedAuto\":\"1\",\r\n         \"WaiverOfDepreciation\":true,\r\n         \"LiabilityLimit\":\"1\",\r\n         \"AccidentWaiver\":true,\r\n         \"LimitedGlassCoverage\":false,\r\n         \"HasAccidentBenefits\":false,\r\n         \"ABIncomeReplacement\":null,\r\n         \"ABIncreasedCare\":null,\r\n         \"ABIncreasedCareInjuries\":null,\r\n         \"ABImpairCoverages\":null,\r\n         \"ABDeathFuneral\":null,\r\n         \"ABDependantCare\":null,\r\n         \"ABIndexationBenifit\":null,\r\n         \"ABOffsetTortDed\":null\r\n      }\r\n   ],\r\n   \"DriverProfile\":[  \r\n      {  \r\n         \"DriverID\":494938383,\r\n         \"QuoteType\":2,\r\n         \"MaritalStatus\":\"1\",\r\n         \"Birthday\":\"1986-04-15 00:00:00.000\",\r\n         \"Gender\":\"M\",\r\n         \"FirstName\":\"Adam\",\r\n         \"LastName\":\"Smith\",\r\n         \"ContinousIsuranceYears\":\"5\",\r\n         \"DateWithCurrentCompany\":\"5\",\r\n         \"DriversTesting\":true,\r\n         \"Retired\":false,\r\n         \"GDate\":\"2007-10-01 00:00:00.000\",\r\n         \"G1Date\":\"2005-09-01 00:00:00.000\",\r\n         \"G2Date\":\"2006-10-01 00:00:00.000\",\r\n         \"LicenseLetter\":\"G\",\r\n         \"GridLevelGiven\":\"\",\r\n         \"GridLevelEffectiveDate\":\"\"\r\n      },\r\n      {  \r\n         \"DriverID\":494938384,\r\n         \"QuoteType\":2,\r\n         \"MaritalStatus\":\"1\",\r\n         \"Birthday\":\"1991-04-15 00:00:00.000\",\r\n         \"Gender\":\"F\",\r\n         \"FirstName\":\"Amy\",\r\n         \"LastName\":\"Smith\",\r\n         \"ContinousIsuranceYears\":\"8\",\r\n         \"DateWithCurrentCompany\":\"8\",\r\n         \"DriversTesting\":true,\r\n         \"Retired\":false,\r\n         \"GDate\":\"2010-10-01 00:00:00.000\",\r\n         \"G1Date\":\"2008-09-01 00:00:00.000\",\r\n         \"G2Date\":\"2009-10-01 00:00:00.000\",\r\n         \"LicenseLetter\":\"G\",\r\n         \"GridLevelGiven\":\"\",\r\n         \"GridLevelEffectiveDate\":\"\"\r\n      }\r\n   ],\r\n   \"Claims\":[  \r\n      {  \r\n         \"DriverID\":494938383,\r\n         \"ClaimID\":11,\r\n         \"VehID\":542938383,\r\n         \"ClaimDate\":\"2017-02-01 00:00:00.000\",\r\n         \"ClaimType\":\"At Fault Accident\"\r\n      }\r\n   ],\r\n   \"Incidents\":[  \r\n      {  \r\n         \"DriverCancellationID\":5,\r\n         \"IncidentDate\":null,\r\n         \"IncidentType\":\"Cancelled for non-payment\",\r\n         \"DriverID\":494938384,\r\n         \"DateReinstated\":null,\r\n         \"Reason\":null,\r\n         \"Suspended90Days\":false,\r\n         \"SuspendedReason\":null,\r\n         \"SuspendedDate\":null,\r\n         \"CancellationDate\":\"2018-01-17 00:00:00.000\",\r\n         \"SuspendedDateReinstated\":null,\r\n         \"SuspensionEndDate\":null,\r\n         \"SuspensionStartDate\":null\r\n      }\r\n   ],\r\n   \"Convictions\":[  \r\n      {  \r\n         \"TicketID\":42,\r\n         \"DriverID\":494938384,\r\n         \"ConvictionDate\":\"2017-11-11 00:00:00.000\",\r\n         \"OffenceCode\":\"TSL\",\r\n         \"Severity\":\"Minor\"\r\n      }\r\n   ]\r\n}",
					"headers": "Content-Type: application/json\nAuthorization: bearer {{easyinsure_access_token}}\n",
					"pathVariables": {}
				},
				{
					"id": "48274d1a-6acc-d1a2-5838-cbd0fa41cca3",
					"name": "Token",
					"url": "http://settings.easyinsure.ca/token",
					"description": null,
					"data": [
						{
							"key": "username",
							"value": "{{easyinsure_username}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "password",
							"value": "{{easyinsure_password}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "grant_type",
							"value": "{{easyinsure_grant_type}}",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "urlencoded",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/x-www-form-urlencoded",
							"enabled": true
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "48419788-b6de-4c93-aeec-76e91cf229bd",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () ",
									"{ ",
									"    if (pm.response.code == 200) ",
									"{",
									"    var jsonData = pm.response.json(); ",
									"postman.setEnvironmentVariable('easyinsure_access_token', jsonData.access_token); ",
									"} ",
									"pm.response.to.have.status(200); ",
									"    ",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () \n{ \n    if (pm.response.code == 200) \n{\n    var jsonData = pm.response.json(); \npostman.setEnvironmentVariable('easyinsure_access_token', jsonData.access_token); \n} \npm.response.to.have.status(200); \n    \n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "19b4f396-189e-3a1c-c579-17f03e819db1",
					"headers": "Content-Type: application/x-www-form-urlencoded\n",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
			"name": "Autolife APIs",
			"description": "Autolife API tests.\n\nPre-requisites:-\n1. Environment vairables\n\ta. api-url\n\tb. username\n\tc. password",
			"auth": null,
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"id": "da619ff4-7ab1-4854-b454-34e8e4b0c280",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5beb20cc-5e2c-49f9-9c9a-c82e78363c45",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"variables": [
				{
					"key": "authentication-token",
					"value": "",
					"description": "",
					"type": "text",
					"disabled": false
				}
			],
			"order": [],
			"folders_order": [
				"61bfadc0-b5f9-4674-8f31-7dc744e0d488",
				"e73296b8-be68-4ab2-a599-d3c8c4f7e5bf",
				"e870c733-fa1c-4c2c-a73b-f1e6ba26dbd4",
				"bbfb13da-8932-45c5-990c-50d548475e2c",
				"b509378b-2493-48a3-9821-e5903740b52d",
				"e8853dcf-9576-4f6f-adf0-060346beaa49"
			],
			"folders": [
				{
					"id": "e8853dcf-9576-4f6f-adf0-060346beaa49",
					"name": "CarWorth",
					"description": null,
					"auth": null,
					"events": null,
					"collection": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folder": null,
					"order": [
						"c687ca8c-e8b5-4571-9faa-a0f7a80eb628",
						"d937de41-e84a-4fd8-9265-50d333a9f91b",
						"60ac34c9-b34a-4b3b-b918-d09ff7887939"
					],
					"folders_order": [],
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folderId": "e8853dcf-9576-4f6f-adf0-060346beaa49"
				},
				{
					"id": "e870c733-fa1c-4c2c-a73b-f1e6ba26dbd4",
					"name": "Insurance",
					"description": null,
					"auth": null,
					"events": null,
					"collection": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folder": null,
					"order": [
						"7d4f3a79-425e-4e09-a84c-874f26afcd01"
					],
					"folders_order": [],
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folderId": "e870c733-fa1c-4c2c-a73b-f1e6ba26dbd4"
				},
				{
					"id": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"name": "Marketplace_BrowseCars",
					"description": null,
					"auth": null,
					"events": null,
					"collection": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folder": null,
					"order": [
						"e4d95d3d-5a1b-4511-8451-cdbd678117fb",
						"631a4ff7-9957-4ce1-b4d2-a5efcffe0dfd",
						"058e2edb-ced5-4ce8-9642-7fae8d51d5fd",
						"1189c00e-783a-4eb0-99cb-53f7f2cf5182",
						"0bf1eff2-7cc9-4e58-ba8d-1cef3b0b5fd8",
						"267b3b3e-6e42-49ce-804c-63d10db13c73",
						"42db50f2-2eb2-4d55-918b-f936893525ef",
						"42745171-fe60-4109-bc28-5bf8714e4fe6",
						"f29bbcd7-05c0-4a24-b932-e8e0ea04dd3b",
						"8627a3e5-ca28-45b8-a992-17041e1d2ce8",
						"f03baa1c-55d2-4f8d-abda-17794c0bbb25",
						"98817a8a-75ab-419c-ac1d-7f74edb0efac",
						"987fe8cc-0f79-4911-a16c-5ee755d83744",
						"b5a02538-e7b5-403e-9a87-0b7d9fac9f54"
					],
					"folders_order": [],
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folderId": "bbfb13da-8932-45c5-990c-50d548475e2c"
				},
				{
					"id": "e73296b8-be68-4ab2-a599-d3c8c4f7e5bf",
					"name": "Profile",
					"description": null,
					"auth": null,
					"events": null,
					"collection": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folder": null,
					"order": [
						"a7025364-6028-409d-a687-f89c36abbb51",
						"7f095b7c-7a2f-483c-ab91-462a873ebcc8",
						"1117459d-e006-41de-9c58-7ac2a4fd9732",
						"01d9c3a2-ad03-4fc8-a664-dddc53f11518",
						"a9678c8d-3766-4038-b3eb-1fa8da2c0ccb"
					],
					"folders_order": [],
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folderId": "e73296b8-be68-4ab2-a599-d3c8c4f7e5bf"
				},
				{
					"id": "b509378b-2493-48a3-9821-e5903740b52d",
					"name": "Shop For Cars",
					"description": null,
					"auth": null,
					"events": null,
					"collection": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folder": null,
					"order": [
						"bb484866-26d2-4624-af81-c268c1b727b8",
						"ce911c65-f99f-4ff1-b923-54e6f99aa57a"
					],
					"folders_order": [],
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folderId": "b509378b-2493-48a3-9821-e5903740b52d"
				},
				{
					"id": "61bfadc0-b5f9-4674-8f31-7dc744e0d488",
					"name": "Trends",
					"description": null,
					"auth": null,
					"events": null,
					"collection": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folder": null,
					"order": [
						"47a8f439-4911-4222-9eb0-a0a62de8c8f3",
						"10505eda-d1f3-4e3d-80dd-9b42c3ef04fd",
						"dd9f692a-f0ca-4fbe-b025-2f0e0638a7d6",
						"cbfe1153-681e-426a-b5ee-6aced7a97cb2",
						"dacd9217-8e8d-472a-ab58-ab7625bfe3e4",
						"ef5201b6-5377-46cf-ad67-9f414942635d"
					],
					"folders_order": [],
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"folderId": "61bfadc0-b5f9-4674-8f31-7dc744e0d488"
				}
			],
			"requests": [
				{
					"id": "01d9c3a2-ad03-4fc8-a664-dddc53f11518",
					"name": "Brands",
					"url": "http://{{api-url}}/user/update/brand/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "0f2b1876-d021-4378-84f1-d06c6467be94",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "e73296b8-be68-4ab2-a599-d3c8c4f7e5bf",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"brands\":[{\"brand_id\":81,\"value\":false},{\"brand_id\":82,\"value\":true},{\"brand_id\":85,\"value\":false},{\"brand_id\":86,\"value\":false},{\"brand_id\":87,\"value\":false},{\"brand_id\":88,\"value\":true},{\"brand_id\":89,\"value\":false},{\"brand_id\":90,\"value\":false},{\"brand_id\":91,\"value\":false},{\"brand_id\":92,\"value\":false},{\"brand_id\":95,\"value\":false},{\"brand_id\":96,\"value\":false},{\"brand_id\":97,\"value\":false},{\"brand_id\":98,\"value\":false},{\"brand_id\":101,\"value\":false},{\"brand_id\":102,\"value\":false},{\"brand_id\":103,\"value\":false},{\"brand_id\":104,\"value\":false},{\"brand_id\":105,\"value\":false},{\"brand_id\":106,\"value\":false},{\"brand_id\":107,\"value\":false},{\"brand_id\":108,\"value\":false},{\"brand_id\":109,\"value\":false},{\"brand_id\":110,\"value\":false},{\"brand_id\":111,\"value\":false},{\"brand_id\":112,\"value\":false},{\"brand_id\":113,\"value\":false},{\"brand_id\":114,\"value\":false},{\"brand_id\":115,\"value\":false},{\"brand_id\":116,\"value\":false},{\"brand_id\":117,\"value\":false},{\"brand_id\":118,\"value\":false},{\"brand_id\":119,\"value\":false},{\"brand_id\":120,\"value\":false},{\"brand_id\":121,\"value\":false},{\"brand_id\":122,\"value\":false},{\"brand_id\":123,\"value\":false},{\"brand_id\":124,\"value\":false},{\"brand_id\":129,\"value\":false},{\"brand_id\":130,\"value\":false},{\"brand_id\":131,\"value\":false},{\"brand_id\":132,\"value\":false}]}",
					"headers": "Authorization: AL {{authentication-token}}\nContent-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "058e2edb-ced5-4ce8-9642-7fae8d51d5fd",
					"name": "Sub_Categories",
					"url": "http://{{api-url}}/vehicles/sub_categories/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "f0e7b5ce-cb7f-4e8e-94a3-7c387ce9a282",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "0bf1eff2-7cc9-4e58-ba8d-1cef3b0b5fd8",
					"name": "Category_Family",
					"url": "http://{{api-url}}/vehicles/category/family-2018-01-22-102454110010/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "d6ac82d0-7541-4956-8d86-990dc39ffd2a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "10505eda-d1f3-4e3d-80dd-9b42c3ef04fd",
					"name": "Content_Like",
					"url": "http://{{api-url}}/content_manager/content_like/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "d4b1a764-efab-46ee-beb7-22e9d8774271",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "61bfadc0-b5f9-4674-8f31-7dc744e0d488",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"content_id\":864}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "1117459d-e006-41de-9c58-7ac2a4fd9732",
					"name": "Interest",
					"url": "http://{{api-url}}/user/update/interest/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "9d216cf2-973d-49d9-9a2c-9053dbfa6950",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "e73296b8-be68-4ab2-a599-d3c8c4f7e5bf",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"interests\":[{\"interest_id\":24,\"value\":false},{\"interest_id\":21,\"value\":false},{\"interest_id\":7,\"value\":false},{\"interest_id\":6,\"value\":false},{\"interest_id\":5,\"value\":false},{\"interest_id\":4,\"value\":false},{\"interest_id\":3,\"value\":false},{\"interest_id\":2,\"value\":false},{\"interest_id\":1,\"value\":false}]}",
					"headers": "Authorization: AL {{authentication-token}}\nContent-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "1189c00e-783a-4eb0-99cb-53f7f2cf5182",
					"name": "Category_Eco",
					"url": "http://{{api-url}}/vehicles/category/eco-2018-01-22-102459333371/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "3bb529f9-2c67-47f4-bda5-cfb997ba2009",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "267b3b3e-6e42-49ce-804c-63d10db13c73",
					"name": "Category_Luxury",
					"url": "http://{{api-url}}/vehicles/category/luxury-2018-01-22-102449342173/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "29ed9cd3-dafe-4b80-a33a-6a862d3cbb37",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "42745171-fe60-4109-bc28-5bf8714e4fe6",
					"name": "Category_Sport",
					"url": "http://{{api-url}}/vehicles/category/sport-2018-01-22-102436646669/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c3b3eb99-5820-4c1c-baa4-0dfd68238340",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "42db50f2-2eb2-4d55-918b-f936893525ef",
					"name": "Category_Small",
					"url": "http://{{api-url}}/vehicles/category/small-2018-01-22-102440651271",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b5d90e82-27ae-4917-a496-c413a0f7c171",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "47a8f439-4911-4222-9eb0-a0a62de8c8f3",
					"name": "Login",
					"url": "http://{{api-url}}/user/login/",
					"description": "AWS - http://13.58.34.191/user/login/\nOVH - http://167.114.49.129/api/user/login/",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Accept",
							"value": "*/*"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5fa47362-5ae5-4fd7-9efb-83fa39fa299a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () ",
									"{ ",
									"    if (pm.response.code == 200) ",
									"{",
									"    var jsonData = pm.response.json(); ",
									"postman.setEnvironmentVariable('authentication-token', jsonData.data.token); ",
									"} ",
									"pm.response.to.have.status(200); ",
									"    ",
									"});"
								]
							}
						}
					],
					"folder": "61bfadc0-b5f9-4674-8f31-7dc744e0d488",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () \n{ \n    if (pm.response.code == 200) \n{\n    var jsonData = pm.response.json(); \npostman.setEnvironmentVariable('authentication-token', jsonData.data.token); \n} \npm.response.to.have.status(200); \n    \n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"email\":\"{{username}}\",\"password\":\"{{password}}\"}",
					"headers": "Accept: */*\nCache-Control: no-cache\nContent-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "60ac34c9-b34a-4b3b-b918-d09ff7887939",
					"name": "FutureValue",
					"url": "http://{{api-url}}/marketplace/future_value_results/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "bdcdb72b-5494-4b3d-b5d9-b413f18f893c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "e8853dcf-9576-4f6f-adf0-060346beaa49",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"year\":2015,\"make\":\"Honda\",\"model\":\"Civic\",\"trim\":\"Hybrid\",\"body_style\":\"4D Sedan at\",\"postal_code\":\"L3P1B7\",\"current_kilometers\":\"100000\",\"annual_kilometers\":\"200000\"}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "631a4ff7-9957-4ce1-b4d2-a5efcffe0dfd",
					"name": "Jatomakers",
					"url": "http://{{api-url}}/marketplace/jatomakes/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": null,
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "7d4f3a79-425e-4e09-a84c-874f26afcd01",
					"name": "Insurance_Article",
					"url": "http://{{api-url}}/content_manager/content_by_guid/breaking-down-auto-insurance-premiums-oky/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "noauth"
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "9348d9ee-ef6a-4a94-b053-c0625765d09b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "e870c733-fa1c-4c2c-a73b-f1e6ba26dbd4",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "7f095b7c-7a2f-483c-ab91-462a873ebcc8",
					"name": "Update",
					"url": "http://{{api-url}}/user/update/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "12f15d7a-ec0c-48d4-973e-e0b6a6d8779d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "e73296b8-be68-4ab2-a599-d3c8c4f7e5bf",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"username\":\"sonam.dogra\",\"email\":\"sonam.dogra@smartbuzz.net\",\"first_name\":\"Sonam\",\"last_name\":\"SKamal\",\"avatar_url\":\"https://media-staging-autolife-ca.s3.amazonaws.com/media/uploads/love-hd-wallpapers-for-boyfriend.jpg\",\"contact\":\"9630852741\",\"postal_code\":null,\"old_password\":\"\",\"password\":\"\",\"confirm_password\":\"\",\"is_subscribed\":true,\"monthly_newsletter_subscription\":true,\"is_verified\":true}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "8627a3e5-ca28-45b8-a992-17041e1d2ce8",
					"name": "Category_Truck",
					"url": "http://{{api-url}}/vehicles/category/truck-2018-01-22-102413073788/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c8715885-21cd-44a5-ab9c-909d7866cf75",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "987fe8cc-0f79-4911-a16c-5ee755d83744",
					"name": "Get_Dealers",
					"url": "http://{{api-url}}/marketplace/get_dealers/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"description": ""
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "0c10d1bc-6538-40f9-bf50-ecce63cf1b12",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"postal_code\":\"M5V1M1\",\"division\":\"Honda\",\"search_radius\":\"500\"}",
					"headers": "Authorization: AL {{authentication-token}}\nContent-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "98817a8a-75ab-419c-ac1d-7f74edb0efac",
					"name": "Vehicle_Unsave",
					"url": "http://{{api-url}}/user/remove_saved_cars/415/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "8c6ce2bc-533f-4aa9-8d2e-246bfe90c9f7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "a7025364-6028-409d-a687-f89c36abbb51",
					"name": "User_Content_Preferences",
					"url": "http://{{api-url}}/user/user_content_preferences/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5b07c31d-1585-4b8c-b659-106c30e81fa5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "e73296b8-be68-4ab2-a599-d3c8c4f7e5bf",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "a9678c8d-3766-4038-b3eb-1fa8da2c0ccb",
					"name": "User_Info",
					"url": "http://{{api-url}}/user/info/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a4ed1c20-df5e-49a1-b554-a25dbd4fbec2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "e73296b8-be68-4ab2-a599-d3c8c4f7e5bf",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "b5a02538-e7b5-403e-9a87-0b7d9fac9f54",
					"name": "Category_Truck Copy",
					"url": "http://{{api-url}}/vehicles/category/truck-2018-01-22-102413073788/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c8715885-21cd-44a5-ab9c-909d7866cf75",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "bb484866-26d2-4624-af81-c268c1b727b8",
					"name": "CarWithoutPostalCode",
					"url": "http://{{api-url}}/marketplace/jato_search/?make=Acura&model=ilx&year=2017",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "make",
							"value": "Acura",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "model",
							"value": "ilx",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2017",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "8f3232fd-b93f-41b7-be56-dbbec9c5bf87",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "b509378b-2493-48a3-9821-e5903740b52d",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "c687ca8c-e8b5-4571-9faa-a0f7a80eb628",
					"name": "AveragePrice",
					"url": "http://{{api-url}}/marketplace/avg_asking_results/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b3bca210-77b4-497f-862c-e18648f203de",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "e8853dcf-9576-4f6f-adf0-060346beaa49",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"year\":2017,\"make\":\"Audi\",\"model\":\"A4\",\"trim\":\"Progressiv\",\"body_style\":\"4D Sedan Qtro 6sp\",\"postal_code\":\"L3P1B7\"}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "cbfe1153-681e-426a-b5ee-6aced7a97cb2",
					"name": "Trends",
					"url": "http://{{api-url}}/content_manager/news/",
					"description": "AWS - http://13.58.34.191/content_manager/news/\nOVH - http://167.114.49.129/api/content_manager/news/",
					"data": [],
					"dataMode": "raw",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "noauth"
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a43840f6-72a0-468b-aa8d-34760aa6ea31",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "61bfadc0-b5f9-4674-8f31-7dc744e0d488",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "ce911c65-f99f-4ff1-b923-54e6f99aa57a",
					"name": "CarWithPostalCode",
					"url": "http://{{api-url}}/marketplace/jato_search/?make=Acura&model=ilx&year=2017&postal_code=M3M4R1",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "make",
							"value": "Acura",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "model",
							"value": "ilx",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2017",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "postal_code",
							"value": "M3M4R1",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "fdd255e7-c4d3-40b8-8cd1-9793704f7e1c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "b509378b-2493-48a3-9821-e5903740b52d",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "d937de41-e84a-4fd8-9265-50d333a9f91b",
					"name": "TradeInValue",
					"url": "http://{{api-url}}/marketplace/trade_in_results/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "9587a4a1-69da-4b66-a6b5-54c1e5eb2b8b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "e8853dcf-9576-4f6f-adf0-060346beaa49",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"year\":2015,\"make\":\"Alfa Romeo\",\"model\":\"4C\",\"postal_code\":\"L3P1B7\"}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "dacd9217-8e8d-472a-ab58-ab7625bfe3e4",
					"name": "Trends-UserRelated",
					"url": "http://{{api-url}}/content_manager/user_related/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "2cab6648-305b-4816-93f1-040797d9c5fa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "61bfadc0-b5f9-4674-8f31-7dc744e0d488",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "dd9f692a-f0ca-4fbe-b025-2f0e0638a7d6",
					"name": "Content_Dislike",
					"url": "http://{{api-url}}/content_manager/content_dislike/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "3c774079-25f3-4a15-816b-d9e28f507d03",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "61bfadc0-b5f9-4674-8f31-7dc744e0d488",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"rawModeData": "{\"content_id\":864}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "e4d95d3d-5a1b-4511-8451-cdbd678117fb",
					"name": "Category",
					"url": "http://{{api-url}}/vehicles/categories/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "3cf88ccd-941b-48b4-bfa5-8c614dbcfbf5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "ef5201b6-5377-46cf-ad67-9f414942635d",
					"name": "Content_View",
					"url": "http://{{api-url}}/content_manager/content_by_guid/autolife-its-about-what-moves-you-z9o/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "4de1b2d5-ca75-4067-a3b5-27f112c9999f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "61bfadc0-b5f9-4674-8f31-7dc744e0d488",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "f03baa1c-55d2-4f8d-abda-17794c0bbb25",
					"name": "Vehicle_Detail",
					"url": "http://{{api-url}}/vehicles/details/415/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "aa5f1b1c-2c5a-4943-95ae-58905bd584e8",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "f29bbcd7-05c0-4a24-b932-e8e0ea04dd3b",
					"name": "Category_SUV",
					"url": "http://{{api-url}}/vehicles/category/suv-2018-01-22-102432185139/",
					"description": null,
					"data": [],
					"dataMode": null,
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "129d4ac8-3b4a-404b-a24a-f1d6e533aa08",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "bbfb13da-8932-45c5-990c-50d548475e2c",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "2408fcfc-7dbb-44d4-9f49-b00a613024b8",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "73c9e769-bb73-9e64-e48e-371876336fd2",
			"name": "Jato",
			"description": "",
			"auth": null,
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"id": "57d6f78d-4400-4b30-8598-ca44e767e2a3",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6e0925a6-8e86-415a-8dc5-ca302b8bfb3a",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"variables": [
				{
					"key": "jato_username",
					"value": "ca.autolifetrial",
					"type": "text",
					"disabled": false
				},
				{
					"key": "jato_password",
					"value": "jato1flex",
					"type": "text",
					"disabled": false
				},
				{
					"key": "jato_grant_type",
					"value": "password",
					"type": "text",
					"disabled": false
				},
				{
					"key": "jato_access_token",
					"value": "Not set",
					"description": "",
					"type": "text",
					"disabled": false
				},
				{
					"key": "jato_subscription_key",
					"value": "4933e96dba364d1b8f859debec92c22d",
					"description": "",
					"type": "text",
					"disabled": false
				}
			],
			"order": [
				"bd757eae-1f4f-6228-ffdc-f29c34f66f25",
				"aa0a246e-68ac-a8d3-22e7-443fc3c9f680",
				"b8c833d6-7557-5ead-3f95-1bb5f2c9ad90"
			],
			"folders_order": [],
			"folders": [],
			"requests": [
				{
					"id": "aa0a246e-68ac-a8d3-22e7-443fc3c9f680",
					"name": "manufacturers",
					"url": "https://api.jatoflex.com/api/en-ca/manufacturers",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Subscription-Key",
							"value": "{{jato_subscription_key}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Authorization",
							"value": "Bearer {{jato_access_token}}",
							"description": "",
							"enabled": true
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "6f005a73-f2bd-4b71-ba0a-df22255d0713",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "73c9e769-bb73-9e64-e48e-371876336fd2",
					"headers": "Subscription-Key: {{jato_subscription_key}}\nAuthorization: Bearer {{jato_access_token}}\n",
					"pathVariables": {}
				},
				{
					"id": "b8c833d6-7557-5ead-3f95-1bb5f2c9ad90",
					"name": "makes",
					"url": "https://api.jatoflex.com/api/en-ca/manufacturers",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Subscription-Key",
							"value": "{{jato_subscription_key}}",
							"description": "",
							"enabled": true
						},
						{
							"key": "Authorization",
							"value": "Bearer {{jato_access_token}}",
							"description": "",
							"enabled": true
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "21044de8-0ddb-441a-b272-e770503e8ff9",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "73c9e769-bb73-9e64-e48e-371876336fd2",
					"headers": "Subscription-Key: {{jato_subscription_key}}\nAuthorization: Bearer {{jato_access_token}}\n",
					"pathVariables": {}
				},
				{
					"id": "bd757eae-1f4f-6228-ffdc-f29c34f66f25",
					"name": "https://auth.jatoflex.com/oauth/token",
					"url": "https://auth.jatoflex.com/oauth/token",
					"description": null,
					"data": [
						{
							"key": "username",
							"value": "{{jato_username}}",
							"type": "text",
							"enabled": true,
							"description": ""
						},
						{
							"key": "password",
							"value": "{{jato_password}}",
							"type": "text",
							"enabled": true,
							"description": ""
						},
						{
							"key": "grant_type",
							"value": "{{jato_grant_type}}",
							"type": "text",
							"enabled": true,
							"description": ""
						}
					],
					"dataMode": "urlencoded",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/x-www-form-urlencoded",
							"enabled": true
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "2f8d5da1-8ce6-4652-9d18-62690579c17f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () ",
									"{ ",
									"    if (pm.response.code == 200) ",
									"{",
									"    var jsonData = pm.response.json(); ",
									"postman.setEnvironmentVariable('jato_access_token', jsonData.access_token); ",
									"} ",
									"pm.response.to.have.status(200); ",
									"    ",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () \n{ \n    if (pm.response.code == 200) \n{\n    var jsonData = pm.response.json(); \npostman.setEnvironmentVariable('jato_access_token', jsonData.access_token); \n} \npm.response.to.have.status(200); \n    \n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "73c9e769-bb73-9e64-e48e-371876336fd2",
					"headers": "Content-Type: application/x-www-form-urlencoded\n",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "bd2cd40a-d0b8-8b8b-adc0-92c847e17f57",
			"name": "SCI",
			"description": "",
			"auth": null,
			"events": null,
			"variables": [],
			"order": [
				"b5d9218e-d401-701d-4549-54bcdd1d3441",
				"32bed647-d947-4817-9011-14845db747c6",
				"56f18f4f-e268-42e2-857e-4ea56469563e"
			],
			"folders_order": [],
			"folders": [],
			"requests": [
				{
					"id": "32bed647-d947-4817-9011-14845db747c6",
					"name": "Post Lead-Autolife url",
					"url": "https://uatleadpush.scidealerhub.com/oemleadpush/GetAdfLead/AutoLife",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "text/xml;charset=UTF-8",
							"description": "",
							"enabled": true
						},
						{
							"key": "Accept-Encoding",
							"value": "gzip,deflate",
							"description": "",
							"enabled": true
						},
						{
							"key": "Connection",
							"value": "Keep-Alive",
							"description": "",
							"enabled": true
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "dd796d8c-da77-44cd-a0b9-d4e735eefa9f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "bd2cd40a-d0b8-8b8b-adc0-92c847e17f57",
					"rawModeData": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<?adf version=\"1.0\"?>\n<adf>\n    <prospect>\n        <requestdate>2018-03-30T15:30:20-08:0</requestdate>\n        <vehicle>\n            <year>2008</year>\n            <make>Make</make>\n            <model>Model</model>\n        </vehicle>\n        <customer>\n            <contact>\n                <name part=\"first\">First</name>\n                <name part=\"last\">Last</name>\n                <phone>323-223-3322</phone>\n                <email>emailaddress</email>\n            </contact>\n        </customer>\n        <vendor>\n            <contact>\n                <name part=\"full\">Dealer Name</name>\n            </contact>\n        </vendor>\n    </prospect>\n</adf>",
					"headers": "Content-Type: text/xml;charset=UTF-8\nAccept-Encoding: gzip,deflate\nConnection: Keep-Alive\n",
					"pathVariables": {}
				},
				{
					"id": "56f18f4f-e268-42e2-857e-4ea56469563e",
					"name": "Post Lead-Mazda url",
					"url": "https://uatleadpush.scidealerhub.com/oemleadpush/GetSciLead/MazdaCanada",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "text/xml",
							"description": "",
							"enabled": true
						},
						{
							"key": "Accept-Encoding",
							"value": "gzip,deflate",
							"description": "",
							"enabled": true
						},
						{
							"key": "Connection",
							"value": "Keep-Alive",
							"description": "",
							"enabled": true
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "35bcdd1f-466a-445c-8a6e-ef281e17c63b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "bd2cd40a-d0b8-8b8b-adc0-92c847e17f57",
					"rawModeData": "<SCI schemaVersion=\"4.0\" xmlns:SciB=\"http://www.scitorque.com/Schema/BusinessBaseType\">\n\t<Lead LeadClassName=\"Sales\" Status=\"new\">\n\t\t<Id Sequence=\"1\" Source=\"mazda.ca\">30900</Id>\n\t\t<LeadClassification>New</LeadClassification>\n\t\t<Requestdate>2017-09-23T18:26:51</Requestdate>\n\t\t<ReceivedDate>2017-09-29T12:03:12</ReceivedDate>\n\t\t<Vehicle Interest=\"buy\" Status=\"new\">\n\t\t\t<Year>2014</Year>\n\t\t\t<Make>Mazda</Make>\n\t\t\t<Model>Mazda6</Model>\n\t\t\t<Vin Sequence=\"1\">JM1GJ1V56E1930106</Vin>\n\t\t\t<Trim>GS</Trim>\n\t\t\t<Price Type=\"msrp\" Currency=\"USD\">14450</Price>\n\t\t\t<ModelCode>G4SL84</ModelCode>\n\t\t\t<Bodystyle>4D Sedan</Bodystyle>\n\t\t\t<SMS>166</SMS>\n\t\t\t<Id>292872</Id>\n\t\t\t<DocumentID>20170724</DocumentID>\n\t\t</Vehicle>\n\t\t<Customer Type=\"individual\">\n\t\t\t<Contact>\n\t\t\t\t<Name Part=\"first\" Type=\"individual\">FN_20179290803000251_1</Name>\n\t\t\t\t<Name Part=\"last\" Type=\"individual\">LN_20179290803000251_1</Name>\n\t\t\t\t<EMail PreferredContact=\"1\" SCI=\"OK\">FLName_20179290803000251_1@gmail.com</EMail>\n\t\t\t\t<Phone Type=\"voice\" Time=\"day\" PreferredContact=\"1\" ChannelCode=\"Business Phone\" SCI=\"OK\">\n\t\t\t\t\t<Number>9054791595</Number>\n\t\t\t\t\t<Extension/>\n\t\t\t\t</Phone>\n\t\t\t\t<Address SCI=\"OK\" Type=\"home\">\n\t\t\t\t\t<Street Line=\"1\">55 Vogell Road</Street>\n\t\t\t\t\t<Street Line=\"2\">Suite 600</Street>\n\t\t\t\t\t<City>Richmond Hill</City>\n\t\t\t\t\t<RegionCode>ON</RegionCode>\n\t\t\t\t\t<PostalCode>L4B 3K5</PostalCode>\n\t\t\t\t\t<Country CountryCode=\"CA\">CANADA</Country>\n\t\t\t\t\t<Latitude>43.867426</Latitude>\n\t\t\t\t\t<Longitude>-79.379371</Longitude>\n\t\t\t\t\t<CountyFips>0</CountyFips>\n\t\t\t\t\t<CensusTrack>0</CensusTrack>\n\t\t\t\t</Address>\n\t\t\t</Contact>\n\t\t\t<Comments>M: Oct D: 31 T: 1:00pm</Comments>\n\t\t\t<CurrentlyOwned/>\n\t\t</Customer>\n\t\t<Vendor>\n\t\t\t<Id>999</Id>\n\t\t\t<Vendorname>dealerName</Vendorname>\n\t\t\t<DealerID>60067</DealerID>\n\t\t\t<Division>Mazda</Division>\n\t\t</Vendor>\n\t\t<Provider>\n\t\t\t<Id Source=\"Mazda\">600002</Id>\n\t\t\t<Name Part=\"full\" Type=\"company\">MazdaDlrTestDr</Name>\n\t\t\t<Service>MTDrive</Service>\n\t\t</Provider>\n\t\t<MiscData>\n\t\t\t<BusinessIndicator>Retail</BusinessIndicator>\n\t\t</MiscData>\n\t\t<LeadSourceName>Mazda Canada Book a Test Drive</LeadSourceName>\n\t</Lead>\n</SCI>",
					"headers": "Content-Type: text/xml\nAccept-Encoding: gzip,deflate\nConnection: Keep-Alive\n",
					"pathVariables": {}
				},
				{
					"id": "b5d9218e-d401-701d-4549-54bcdd1d3441",
					"name": "Dealer Service Details",
					"url": "https://uatapi.scimarketview.com/LeadProcessService/DealerExternal.svc",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Accept-Encoding",
							"value": "gzip,deflate",
							"description": "",
							"enabled": true
						},
						{
							"key": "SOAPAction",
							"value": "http://tempuri.org/IDealerExternal/SearchDealerByDealerGroup",
							"description": "",
							"enabled": true
						},
						{
							"key": "Host",
							"value": "uatapi.scimarketview.com",
							"description": "",
							"enabled": true
						},
						{
							"key": "Connection",
							"value": "Keep-Alive",
							"description": "",
							"enabled": true
						},
						{
							"key": "Content-Type",
							"value": "text/xml;charset=UTF-8",
							"description": ""
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "65c4f4c6-c830-4699-abbe-f8f8909e3671",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "bd2cd40a-d0b8-8b8b-adc0-92c847e17f57",
					"rawModeData": "<soapenv:Envelope xmlns:soapenv=\"http://schemas.xmlsoap.org/soap/envelope/\" xmlns:tem=\"http://tempuri.org/\" xmlns:tor=\"http://schemas.datacontract.org/2004/07/Torque.LeadProcess.Entities\" xmlns:arr=\"http://schemas.microsoft.com/2003/10/Serialization/Arrays\">\r\n   <soapenv:Header/>\r\n   <soapenv:Body>\r\n      <tem:SearchDealerByDealerGroup>\r\n         <tem:partnerToken>F0FA0D40-6C27-4265-B9BB-C56CA6D63406</tem:partnerToken>\r\n         <tem:geoData>\r\n           <tor:ZipCode>\r\n           <tor:ZipPostal>L0G1V0</tor:ZipPostal>\r\n            </tor:ZipCode>\r\n         </tem:geoData>\r\n         <!--Optional:-->\r\n         <tem:searchRadius>50</tem:searchRadius>\r\n         <!--Optional:-->\r\n         <tem:divisionFilter>\r\n            <!--Zero or more repetitions:-->\r\n            <arr:string>Chevrolet</arr:string>\r\n         </tem:divisionFilter>\r\n         <!--Optional:-->\r\n         <tem:dealerGroup>Auto Life</tem:dealerGroup>\r\n      </tem:SearchDealerByDealerGroup>\r\n   </soapenv:Body>\r\n</soapenv:Envelope>",
					"headers": "Accept-Encoding: gzip,deflate\nSOAPAction: http://tempuri.org/IDealerExternal/SearchDealerByDealerGroup\nHost: uatapi.scimarketview.com\nConnection: Keep-Alive\nContent-Type: text/xml;charset=UTF-8\n",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "be8adca5-197e-4d19-a65e-5262c83d273c",
			"name": "Autolife",
			"description": null,
			"auth": null,
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"id": "da619ff4-7ab1-4854-b454-34e8e4b0c280",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5beb20cc-5e2c-49f9-9c9a-c82e78363c45",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"variables": null,
			"order": [],
			"folders_order": [
				"460f7b67-c651-46ac-aa63-73cf4e2698b7",
				"35bdeaac-59c4-48b7-9a2f-a655d791660d",
				"3c72024b-ca47-4a86-ac3d-6fb692942f32"
			],
			"folders": [
				{
					"id": "3c72024b-ca47-4a86-ac3d-6fb692942f32",
					"name": "Insurance",
					"description": null,
					"auth": null,
					"events": null,
					"collection": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"folder": null,
					"order": [
						"941abe9a-ded8-47ab-850a-5b11b7676c41",
						"bc2c135c-cbff-498c-b690-fcdf199f72ff",
						"a1df579e-04e7-4ab6-af4f-d7904825c169"
					],
					"folders_order": [],
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"folderId": "3c72024b-ca47-4a86-ac3d-6fb692942f32"
				},
				{
					"id": "35bdeaac-59c4-48b7-9a2f-a655d791660d",
					"name": "Profile",
					"description": null,
					"auth": null,
					"events": null,
					"collection": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"folder": null,
					"order": [
						"18dbdcb3-1071-4bbb-880a-3208236274dc",
						"10c95618-f6ab-4a43-89d3-9e0b56074747",
						"49dccc1e-2062-44cf-b6c6-075e0efe3c94",
						"1eeb5427-fc64-410e-94b9-ed809ed984ac",
						"0f6ffbd8-4142-413e-93eb-fc44318a7a86"
					],
					"folders_order": [],
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"folderId": "35bdeaac-59c4-48b7-9a2f-a655d791660d"
				},
				{
					"id": "460f7b67-c651-46ac-aa63-73cf4e2698b7",
					"name": "Trends",
					"description": null,
					"auth": null,
					"events": null,
					"collection": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"folder": null,
					"order": [
						"48d480a3-0606-4032-96b0-511ec7b427f7",
						"aa9546f8-ceb8-4e87-8a6f-2aec56385a3c",
						"c53fdb8d-051f-4545-bd2e-a1589e5e113b",
						"f1e4724f-4efe-4371-acd8-8b06637c3896",
						"946d7e97-4ff2-4081-8615-d3d39a1cb6a2",
						"ec589cc0-bdb7-4051-9192-7fad6a7e3cc3"
					],
					"folders_order": [],
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"folderId": "460f7b67-c651-46ac-aa63-73cf4e2698b7"
				}
			],
			"requests": [
				{
					"id": "0f6ffbd8-4142-413e-93eb-fc44318a7a86",
					"name": "User_Info",
					"url": "http://{{api-url}}/user/info/",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a4ed1c20-df5e-49a1-b554-a25dbd4fbec2",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "35bdeaac-59c4-48b7-9a2f-a655d791660d",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "10c95618-f6ab-4a43-89d3-9e0b56074747",
					"name": "Update",
					"url": "http://{{api-url}}/user/update/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "12f15d7a-ec0c-48d4-973e-e0b6a6d8779d",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "35bdeaac-59c4-48b7-9a2f-a655d791660d",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"rawModeData": "{\"username\":\"sonam.dogra\",\"email\":\"sonam.dogra@smartbuzz.net\",\"first_name\":\"Sonam\",\"last_name\":\"SKamal\",\"avatar_url\":\"https://media-staging-autolife-ca.s3.amazonaws.com/media/uploads/love-hd-wallpapers-for-boyfriend.jpg\",\"contact\":\"9630852741\",\"postal_code\":null,\"old_password\":\"\",\"password\":\"\",\"confirm_password\":\"\",\"is_subscribed\":true,\"monthly_newsletter_subscription\":true,\"is_verified\":true}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "18dbdcb3-1071-4bbb-880a-3208236274dc",
					"name": "User_Content_Preferences",
					"url": "http://{{api-url}}/user/user_content_preferences/",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5b07c31d-1585-4b8c-b659-106c30e81fa5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "35bdeaac-59c4-48b7-9a2f-a655d791660d",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "1eeb5427-fc64-410e-94b9-ed809ed984ac",
					"name": "Brands",
					"url": "http://{{api-url}}/user/update/brand/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "0f2b1876-d021-4378-84f1-d06c6467be94",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "35bdeaac-59c4-48b7-9a2f-a655d791660d",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"rawModeData": "{\"brands\":[{\"brand_id\":81,\"value\":false},{\"brand_id\":82,\"value\":true},{\"brand_id\":85,\"value\":false},{\"brand_id\":86,\"value\":false},{\"brand_id\":87,\"value\":false},{\"brand_id\":88,\"value\":true},{\"brand_id\":89,\"value\":false},{\"brand_id\":90,\"value\":false},{\"brand_id\":91,\"value\":false},{\"brand_id\":92,\"value\":false},{\"brand_id\":95,\"value\":false},{\"brand_id\":96,\"value\":false},{\"brand_id\":97,\"value\":false},{\"brand_id\":98,\"value\":false},{\"brand_id\":101,\"value\":false},{\"brand_id\":102,\"value\":false},{\"brand_id\":103,\"value\":false},{\"brand_id\":104,\"value\":false},{\"brand_id\":105,\"value\":false},{\"brand_id\":106,\"value\":false},{\"brand_id\":107,\"value\":false},{\"brand_id\":108,\"value\":false},{\"brand_id\":109,\"value\":false},{\"brand_id\":110,\"value\":false},{\"brand_id\":111,\"value\":false},{\"brand_id\":112,\"value\":false},{\"brand_id\":113,\"value\":false},{\"brand_id\":114,\"value\":false},{\"brand_id\":115,\"value\":false},{\"brand_id\":116,\"value\":false},{\"brand_id\":117,\"value\":false},{\"brand_id\":118,\"value\":false},{\"brand_id\":119,\"value\":false},{\"brand_id\":120,\"value\":false},{\"brand_id\":121,\"value\":false},{\"brand_id\":122,\"value\":false},{\"brand_id\":123,\"value\":false},{\"brand_id\":124,\"value\":false},{\"brand_id\":129,\"value\":false},{\"brand_id\":130,\"value\":false},{\"brand_id\":131,\"value\":false},{\"brand_id\":132,\"value\":false}]}",
					"headers": "Authorization: AL {{authentication-token}}\nContent-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "48d480a3-0606-4032-96b0-511ec7b427f7",
					"name": "Login",
					"url": "http://{{api-url}}/user/login/",
					"description": "AWS - http://13.58.34.191/user/login/\nOVH - http://167.114.49.129/api/user/login/",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Accept",
							"value": "*/*"
						},
						{
							"key": "Cache-Control",
							"value": "no-cache"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "5fa47362-5ae5-4fd7-9efb-83fa39fa299a",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () ",
									"{ ",
									"    if (pm.response.code == 200) ",
									"{",
									"    var jsonData = pm.response.json(); ",
									"postman.setEnvironmentVariable('authentication-token', jsonData.data.token); ",
									"} ",
									"pm.response.to.have.status(200); ",
									"    ",
									"});"
								]
							}
						}
					],
					"folder": "460f7b67-c651-46ac-aa63-73cf4e2698b7",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function () \n{ \n    if (pm.response.code == 200) \n{\n    var jsonData = pm.response.json(); \npostman.setEnvironmentVariable('authentication-token', jsonData.data.token); \n} \npm.response.to.have.status(200); \n    \n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"rawModeData": "{\"email\":\"{{username}}\",\"password\":\"{{password}}\"}",
					"headers": "Accept: */*\nCache-Control: no-cache\nContent-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "49dccc1e-2062-44cf-b6c6-075e0efe3c94",
					"name": "Interest",
					"url": "http://{{api-url}}/user/update/interest/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "9d216cf2-973d-49d9-9a2c-9053dbfa6950",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "35bdeaac-59c4-48b7-9a2f-a655d791660d",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"rawModeData": "{\"interests\":[{\"interest_id\":24,\"value\":false},{\"interest_id\":21,\"value\":false},{\"interest_id\":7,\"value\":false},{\"interest_id\":6,\"value\":false},{\"interest_id\":5,\"value\":false},{\"interest_id\":4,\"value\":false},{\"interest_id\":3,\"value\":false},{\"interest_id\":2,\"value\":false},{\"interest_id\":1,\"value\":false}]}",
					"headers": "Authorization: AL {{authentication-token}}\nContent-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "941abe9a-ded8-47ab-850a-5b11b7676c41",
					"name": "Insurance_Article",
					"url": "http://{{api-url}}/content_manager/content_by_guid/breaking-down-auto-insurance-premiums-oky/",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "bearer",
						"bearer": [
							{
								"key": "token",
								"value": "AL {{authentication-token}}",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "9348d9ee-ef6a-4a94-b053-c0625765d09b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "3c72024b-ca47-4a86-ac3d-6fb692942f32",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": "bearerAuth",
					"helperAttributes": {
						"id": "bearer",
						"token": "AL {{authentication-token}}"
					},
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "946d7e97-4ff2-4081-8615-d3d39a1cb6a2",
					"name": "Content_Dislike",
					"url": "http://{{api-url}}/content_manager/content_dislike/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a8a8da22-862b-4069-abc5-d3c4dbb5e143",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "460f7b67-c651-46ac-aa63-73cf4e2698b7",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"rawModeData": "{\"content_id\": 477}",
					"headers": "Authorization: AL {{authentication-token}}\nContent-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "a1df579e-04e7-4ab6-af4f-d7904825c169",
					"name": "Content_Dislike",
					"url": "http://{{api-url}}/content_manager/content_dislike/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "3c774079-25f3-4a15-816b-d9e28f507d03",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "3c72024b-ca47-4a86-ac3d-6fb692942f32",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"rawModeData": "{\"content_id\":864}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "aa9546f8-ceb8-4e87-8a6f-2aec56385a3c",
					"name": "Trends",
					"url": "http://{{api-url}}/content_manager/news/",
					"description": "AWS - http://13.58.34.191/content_manager/news/\nOVH - http://167.114.49.129/api/content_manager/news/",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}",
							"description": "",
							"enabled": true
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "noauth"
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b36d30e1-1417-45ac-9f2d-58885808c313",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "460f7b67-c651-46ac-aa63-73cf4e2698b7",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"rawModeData": "",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "bc2c135c-cbff-498c-b690-fcdf199f72ff",
					"name": "Content_Like",
					"url": "http://{{api-url}}/content_manager/content_like/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "d4b1a764-efab-46ee-beb7-22e9d8774271",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "3c72024b-ca47-4a86-ac3d-6fb692942f32",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"rawModeData": "{\"content_id\":864}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "c53fdb8d-051f-4545-bd2e-a1589e5e113b",
					"name": "Trends-UserRelated",
					"url": "http://{{api-url}}/content_manager/user_related/",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "2cab6648-305b-4816-93f1-040797d9c5fa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "460f7b67-c651-46ac-aa63-73cf4e2698b7",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "ec589cc0-bdb7-4051-9192-7fad6a7e3cc3",
					"name": "Content_View",
					"url": "http://{{api-url}}/content_manager/content_by_guid/autolife-its-about-what-moves-you-z9o/",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "noauth"
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "4de1b2d5-ca75-4067-a3b5-27f112c9999f",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "460f7b67-c651-46ac-aa63-73cf4e2698b7",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"headers": "Authorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				},
				{
					"id": "f1e4724f-4efe-4371-acd8-8b06637c3896",
					"name": "Content_Like",
					"url": "http://{{api-url}}/content_manager/content_like/",
					"description": null,
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Authorization",
							"value": "AL {{authentication-token}}"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "391377b7-9c99-448d-bafe-f59da6dcad2b",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": "460f7b67-c651-46ac-aa63-73cf4e2698b7",
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "be8adca5-197e-4d19-a65e-5262c83d273c",
					"rawModeData": "{\"content_id\": 553}",
					"headers": "Content-Type: application/json\nAuthorization: AL {{authentication-token}}\n",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
			"name": "CBB",
			"description": "CBB API tests\n\nPre-requisites:-\n1. Environment vairables for Autolife Application Server\n\ta. api-url (app server)\n\tb. username (application user)\n\tc. password  (application user)",
			"auth": null,
			"events": [
				{
					"listen": "prerequest",
					"script": {
						"id": "112516fe-96c8-4851-b887-48d0b38e5513",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "1488ca86-61fe-4a2d-8299-043d9e68ebac",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"variables": [
				{
					"key": "auth_key",
					"value": "UqCfCahLYH",
					"description": "",
					"type": "text",
					"disabled": false
				},
				{
					"key": "schema_version",
					"value": "3.0",
					"description": "",
					"type": "text",
					"disabled": false
				},
				{
					"key": "cbb_trade_in_value_url",
					"value": "xml.canadianblackbook.com/XMLWebServices/service",
					"description": "",
					"type": "text",
					"disabled": false
				},
				{
					"key": "account",
					"value": "autolife_consumer_xml",
					"description": "",
					"type": "text",
					"disabled": false
				},
				{
					"key": "region_name",
					"value": "M5V1M1",
					"description": "",
					"type": "text",
					"disabled": false
				},
				{
					"key": "cbb_avg_asking_price_url",
					"value": "www.canadianblackbook.com/ajax/aap",
					"description": "",
					"type": "text",
					"disabled": false
				}
			],
			"order": [
				"1dd7719a-bba6-50cd-1f8c-121e8f6cada0",
				"130bd38b-1891-6640-ebdf-7ad5f1a2a526",
				"5118d8c5-a0e3-52a3-2f0b-5f01ca77d407",
				"fd984b47-be3e-dbbb-8b04-84b6a8c46920",
				"0ea3f8ed-5b73-a768-aa4f-71f21fb557d4",
				"2d4ce203-bd6b-4c1c-b8c1-525ea2238b60",
				"fc34b350-63c9-495c-ad3d-cc870f7aa554",
				"ff6e8fe6-951f-4200-8800-1040840dfaa7",
				"0f6a954b-a731-4e04-95bd-19d57adcec17",
				"3b6d092d-f95e-443d-9340-0a71b322b613",
				"33c5bf4e-6df8-449f-8437-d8fa514f28d9",
				"7d6e7deb-58cc-3aad-6516-efcc738fba86",
				"0fbb91a0-28be-4bd3-b7c9-330607a6bb8c",
				"3ee586e4-11f3-4eaf-b33d-b00769cc4005",
				"976a4bf9-95a6-492a-92f7-b30cbeea099f",
				"33cf6d1a-0ed7-4448-9561-29308f5eb0bb",
				"61a504e6-3a93-42a0-8045-79b8b70d99d5",
				"2eacc0bf-fa5b-473a-ae0f-99eb6975a0e8"
			],
			"folders_order": [],
			"folders": [],
			"requests": [
				{
					"id": "0ea3f8ed-5b73-a768-aa4f-71f21fb557d4",
					"name": "CBB_Styles",
					"url": "http://{{cbb_trade_in_value_url}}?command=styles&year=2012&make=Audi&model=A3&trim=Progressiv&account={{account}}&key={{auth_key}}&schemaVersion={{schema_version}}",
					"description": "",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "styles",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2012",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "make",
							"value": "Audi",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "model",
							"value": "A3",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "trim",
							"value": "Progressiv",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "{{account}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "{{auth_key}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "{{schema_version}}",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "9d7a3fa1-93cf-4695-a95d-986236b345b7",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "0f6a954b-a731-4e04-95bd-19d57adcec17",
					"name": "CBB-TradeIn with multiple selectedOptions",
					"url": "http://{{cbb_trade_in_value_url}}?command=priceVehicle&year=2016&make=GMC&model=Canyon&trim=base&style=Ext%20Cab%202WD&selectedOptions=05&kilometers=25000&annualKilometers=10000&regionName={{region_name}}&account={{account}}&key={{auth_key}}&schemaVersion={{schema_version}}",
					"description": "Tradein with selectedOptions",
					"data": null,
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "priceVehicle",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2016",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "make",
							"value": "GMC",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "model",
							"value": "Canyon",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "trim",
							"value": "base",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "style",
							"value": "Ext%20Cab%202WD",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "selectedOptions",
							"value": "05",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "kilometers",
							"value": "25000",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "annualKilometers",
							"value": "10000",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "regionName",
							"value": "{{region_name}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "{{account}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "{{auth_key}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "{{schema_version}}",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b5155316-acc7-4ec7-88a8-0e878db9d6bb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "0fbb91a0-28be-4bd3-b7c9-330607a6bb8c",
					"name": "CBB_Region",
					"url": "http://{{cbb_trade_in_value_url}}?command=regions&account=example5&key=InternalDevelopQAS5&schemaVersion=3.0",
					"description": "",
					"data": null,
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "regions",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "example5",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "InternalDevelopQAS5",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "3.0",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "afc9382a-a91e-4619-8bf8-c056ed467112",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "130bd38b-1891-6640-ebdf-7ad5f1a2a526",
					"name": "CBB_Makes",
					"url": "http://{{cbb_trade_in_value_url}}?command=makes&year=2012&account={{account}}&key={{auth_key}}&schemaVersion={{schema_version}}",
					"description": "",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "makes",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2012",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "{{account}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "{{auth_key}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "{{schema_version}}",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "05c63679-41ec-4c6e-938a-9d13c44369ff",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "1dd7719a-bba6-50cd-1f8c-121e8f6cada0",
					"name": "CBB_Year",
					"url": "http://{{cbb_trade_in_value_url}}?command=years&account={{account}}&key={{auth_key}}&schemaVersion={{schema_version}}",
					"description": "CBB Fetch Year",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "years",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "{{account}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "{{auth_key}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "{{schema_version}}",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "d233f0f9-b39e-46ff-9a04-6d6e4a0f1298",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "2d4ce203-bd6b-4c1c-b8c1-525ea2238b60",
					"name": "CBB_vehicles",
					"url": "http://{{cbb_trade_in_value_url}}?command=vehicles&year=2016&make=GMC&model=Canyon&trim=base&style=Ext%20Cab%202WD&account={{account}}&key={{auth_key}}&schemaVersion={{schema_version}}",
					"description": "",
					"data": null,
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "vehicles",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2016",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "make",
							"value": "GMC",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "model",
							"value": "Canyon",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "trim",
							"value": "base",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "style",
							"value": "Ext%20Cab%202WD",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "{{account}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "{{auth_key}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "{{schema_version}}",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "1f9066dd-3730-46cc-887b-94811330240c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "2eacc0bf-fa5b-473a-ae0f-99eb6975a0e8",
					"name": "AL_TradeIn_Price_with_selectedOptions",
					"url": "http://{{api-url}}/marketplace/trade_in_results/",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b69f20d1-c53b-49aa-90f3-c73bb15aea51",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"rawModeData": "{\"year\":2018, \"make\":\"GMC\", \"model\":\"Canyon\", \"trim\": \"base\", \"body_style\": \"Ext Cab 2WD\", \"current_kilometers\":25000, \"annual_kilometers\": 10000, \"option\":\"10,05\"}",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "33c5bf4e-6df8-449f-8437-d8fa514f28d9",
					"name": "CBB_PriceVehicle_XML_POST_1",
					"url": "  http://{{cbb_trade_in_value_url}}?command=priceVehicle",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "text/xml"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "priceVehicle",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "6ab225d8-8e0b-4156-a87c-8f248bccd143",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"rawModeData": "<?xml version=\"1.0\"?>\n<cbb xmlns=\"http://xml.blkbk.com/vehicle/3/0\">\n\t<request>\n        <authorization>\n            <account>example3</account>\n            <key>InternalDevelopQAS3</key>\n        </authorization>\n\t\t<priceVehicleRequest>\n\t\t\t<dataVersion>20050101</dataVersion>\n\t\t\t<newOrUsedVehicle>used</newOrUsedVehicle>\n\t\t\t<year>2004</year>\n\t\t\t<make>Audi</make>\n\t\t\t<model>A4</model>\n\t\t\t<trim></trim>\n\t\t\t<style>4D Sedan Ftrak 1.8T</style>\n\t\t\t<selectedOptions>\n\t\t\t\t<optionCode>20</optionCode>\n\t\t\t</selectedOptions>\n\t\t\t<kilometers>50000</kilometers>\n\t\t\t<annualKilometers>30000</annualKilometers>\n\t\t\t<regionName>Alberta</regionName>\t\t\t\n\t\t</priceVehicleRequest>\n\t</request>\n</cbb>",
					"headers": "Content-Type: text/xml\n",
					"pathVariables": {}
				},
				{
					"id": "33cf6d1a-0ed7-4448-9561-29308f5eb0bb",
					"name": "AL_Future Value",
					"url": "http://{{api-url}}/marketplace/future_value_results/",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "4993ce36-2746-4dd3-9a54-65283f790f4c",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"rawModeData": "{\"year\":2016,\"make\":\"Audi\",\"model\":\"A4\",\"trim\":\"Komfort\",\"body_style\":\"4D Allroad Qtro at\",\"postal_code\":\"M3M4R1\",\"current_kilometers\":\"50000\",\"annual_kilometers\":\"10000\"}",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "3b6d092d-f95e-443d-9340-0a71b322b613",
					"name": "CBB_PriceVehicle_XML_POST",
					"url": "  http://{{cbb_trade_in_value_url}}?command=priceVehicle",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "text/xml"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "priceVehicle",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b6f002d2-1e61-493c-ad7b-0f314450eb66",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"rawModeData": "<?xml version=\"1.0\"?>\n<cbb xmlns=\"http://xml.blkbk.com/vehicle/3/0\">\n\t<request>\n        <authorization>\n            <account>example3</account>\n            <key>InternalDevelopQAS3</key>\n        </authorization>\n\t\t<priceVehicleRequest>\n\t\t\t<dataVersion>20050101</dataVersion>\n\t\t\t<newOrUsedVehicle>used</newOrUsedVehicle>\n\t\t\t<year>2016</year>\n\t\t\t<make>Acura</make>\n\t\t\t<model>RDX</model>\n\t\t\t<trim></trim>\n\t\t\t<style>4D Utility</style>\n\t\t\t<selectedOptions>\n\t\t\t\t<optionCode>10</optionCode>\n\t\t\t</selectedOptions>\n\t\t\t<kilometers>25000</kilometers>\n\t\t\t<annualKilometers>10000</annualKilometers>\n\t\t\t<regionName></regionName>\t\t\t\n\t\t</priceVehicleRequest>\n\t</request>\n</cbb>",
					"headers": "Content-Type: text/xml\n",
					"pathVariables": {}
				},
				{
					"id": "3ee586e4-11f3-4eaf-b33d-b00769cc4005",
					"name": "AL_Options",
					"url": "http://{{api-url}}/marketplace/trade_in/?year=2016&make=GMC&model=Canyon&trim=Base&body_style=Ext%20Cab%202WD",
					"description": "",
					"data": null,
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "year",
							"value": "2016",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "make",
							"value": "GMC",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "model",
							"value": "Canyon",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "trim",
							"value": "Base",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "body_style",
							"value": "Ext%20Cab%202WD",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "b3416e27-f078-4163-94c9-57268c1d09d1",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "5118d8c5-a0e3-52a3-2f0b-5f01ca77d407",
					"name": "CBB_Model",
					"url": "http://{{cbb_trade_in_value_url}}/service?command=models&year=2012&make=Audi&account={{account}}&key={{auth_key}}&schemaVersion={{schema_version}}",
					"description": "",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "models",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2012",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "make",
							"value": "Audi",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "{{account}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "{{auth_key}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "{{schema_version}}",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "d20ca664-9b49-49ae-bc76-223dd636b4eb",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "61a504e6-3a93-42a0-8045-79b8b70d99d5",
					"name": "AL_TradeIn_Price_wo_selectedOptions",
					"url": "http://{{api-url}}/marketplace/trade_in_results/",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "de8d0562-ce0c-470f-ad46-c43404ac1584",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"rawModeData": "{\"year\": \"2016\", \"make\": \"GMC\", \"model\": \"Canyon\", \"postal_code\": \"M3M4R1\", \"trim\": \"base\", \"body_style\": \"Ext Cab 2WD\", \"current_kilometers\":25000, \"annual_kilometers\":\"10000\", \"option\":\"\"}",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "7d6e7deb-58cc-3aad-6516-efcc738fba86",
					"name": "CBB_Average Asking Price",
					"url": "http://{{cbb_avg_asking_price_url}}/2016/Honda/Accord/LX/4D%20Sedan%20at/L3R2N7",
					"description": null,
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "68e6ddc4-27da-41a6-b4cb-37a1517bfdd5",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "976a4bf9-95a6-492a-92f7-b30cbeea099f",
					"name": "AL_AvergaeAskingPrice",
					"url": "http://{{api-url}}/marketplace/avg_asking_results/",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c8820bee-d9f3-4dcb-8376-f3026248eca0",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"rawModeData": "{\"year\":2016,\"make\":\"Audi\",\"model\":\"A4\",\"trim\":\"Komfort\",\"body_style\":\"4D Allroad Qtro at\",\"postal_code\":\"M3M4R1\",\"current_kilometers\":\"50000\",\"annual_kilometers\":\"10000\"}",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "fc34b350-63c9-495c-ad3d-cc870f7aa554",
					"name": "CBB_vehicles_1",
					"url": "http://{{cbb_trade_in_value_url}}?command=vehicles&year=2016&make=Acura&model=RDX&trim=base&style=4d%20utility&account={{account}}&key={{auth_key}}&schemaVersion={{schema_version}}",
					"description": "",
					"data": null,
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "vehicles",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2016",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "make",
							"value": "Acura",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "model",
							"value": "RDX",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "trim",
							"value": "base",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "style",
							"value": "4d%20utility",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "{{account}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "{{auth_key}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "{{schema_version}}",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "c3fa5fd6-fd80-4f74-87d8-df6c4dbe85fa",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "fd984b47-be3e-dbbb-8b04-84b6a8c46920",
					"name": "CBB_Trim",
					"url": "http://{{cbb_trade_in_value_url}}?command=trims&year=2012&make=Audi&model=A3&account={{account}}&key={{auth_key}}&schemaVersion={{schema_version}}",
					"description": "",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "trims",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2012",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "make",
							"value": "Audi",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "model",
							"value": "A3",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "{{account}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "{{auth_key}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "{{schema_version}}",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "a79ba9f8-ec50-401c-9fcc-53b956c87e5e",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "ff6e8fe6-951f-4200-8800-1040840dfaa7",
					"name": "CBB-TradeIn without  selectedOptions",
					"url": "http://{{cbb_trade_in_value_url}}?command=priceVehicle&year=2016&make=Acura&model=RDX&trim=base&style=4d%20utility&selectedOptions=&kilometers=25000&annualKilometers=50000&account={{account}}&key={{auth_key}}&schemaVersion={{schema_version}}",
					"description": "",
					"data": null,
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "command",
							"value": "priceVehicle",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "year",
							"value": "2016",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "make",
							"value": "Acura",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "model",
							"value": "RDX",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "trim",
							"value": "base",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "style",
							"value": "4d%20utility",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "selectedOptions",
							"value": "",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "kilometers",
							"value": "25000",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "annualKilometers",
							"value": "50000",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "account",
							"value": "{{account}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "key",
							"value": "{{auth_key}}",
							"equals": true,
							"description": "",
							"enabled": true
						},
						{
							"key": "schemaVersion",
							"value": "{{schema_version}}",
							"equals": true,
							"description": "",
							"enabled": true
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"id": "91a0d082-49aa-4fa0-8f26-d1df5b1bef83",
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function ()",
									"{",
									"    pm.response.to.have.status(200);",
									"});"
								]
							}
						}
					],
					"folder": null,
					"preRequestScript": null,
					"tests": "pm.test(\"Status code is 200\", function ()\n{\n    pm.response.to.have.status(200);\n});",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "cd4e18fb-5c35-608b-bc32-38348d5a1add",
					"headers": "",
					"pathVariables": {}
				}
			]
		},
		{
			"id": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
			"name": "Postman Echo",
			"description": "Postman Echo is service you can use to test your REST clients and make sample API calls. It provides endpoints for `GET`, `POST`, `PUT`, various auth mechanisms and other utility endpoints.\n\nThe documentation for the endpoints as well as example responses can be found at [https://postman-echo.com](https://postman-echo.com/?source=echo-collection-app-onboarding)",
			"auth": null,
			"events": null,
			"variables": null,
			"order": [],
			"folders_order": [
				"09ddd67c-13fe-4626-8dd4-fc64f1fc27b7",
				"df815c41-a76b-4b5b-7129-ea59275f254b",
				"37368024-f6a8-0f70-85fc-7e876cde9e33",
				"5d3595b3-5e8e-9e33-05ed-855c77298e4e",
				"9a4c3bce-30f7-a496-c9ec-78afecbf1545",
				"930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
				"74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
				"084b21bd-d250-180b-5ed8-94cfaca39fdd"
			],
			"folders": [
				{
					"id": "09ddd67c-13fe-4626-8dd4-fc64f1fc27b7",
					"name": "Auth: Digest",
					"description": "Digest authentication protects an endpoint with a username and password without actually transmitting the password over network.\nOne has to apply a hash function (like MD5, etc) to the username and password before sending them over the network.\n\n> Username: `postman`\n>\n> Password: `password`\n\nUnlike Basic-Auth, authentication happens using two consecutive requests where the first request returns `401 Unauthorised` along with `WWW-Authenticate` header containing information that needs to be used to authenticate subsequent calls.\n\nTo know more about digest authentication, refer to the [Digest Access Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#digest-auth) elaborates how to use the same within the Postman app.",
					"auth": null,
					"events": null,
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folder": null,
					"order": [
						"70ed7920-ead1-2d20-645a-c716ab0fd137",
						"a4c04e32-72cf-0475-07dc-89c23f85cf0c"
					],
					"folders_order": [],
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folderId": "09ddd67c-13fe-4626-8dd4-fc64f1fc27b7"
				},
				{
					"id": "df815c41-a76b-4b5b-7129-ea59275f254b",
					"name": "Auth: Others",
					"description": "",
					"auth": null,
					"events": null,
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folder": null,
					"order": [
						"42c867ca-e72b-3307-169b-26a478b00641",
						"2f79ab5b-9029-56c2-7b05-52047790d670",
						"843acf02-a33c-c4bb-d742-c07b9212e4b0"
					],
					"folders_order": [],
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folderId": "df815c41-a76b-4b5b-7129-ea59275f254b"
				},
				{
					"id": "37368024-f6a8-0f70-85fc-7e876cde9e33",
					"name": "Cookies",
					"description": "The cookie related endpoints allow one to get, set and delete simple cookies.\n\nCookies are small snippets of information that is stored in the browser and sent back to the server with every subsequent requests in order to store useful information between requests.\nIf you want to know more about cookies, read the [HTTP Cookie](https://en.wikipedia.org/wiki/HTTP_cookie) article on wikipedia.",
					"auth": null,
					"events": null,
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folder": null,
					"order": [
						"3de3b135-b3cc-3a68-ba27-b6d373e03c8c",
						"8dc08eee-a543-7c1c-297f-b0b7040c35c6",
						"a4f24593-448b-88de-963f-eeb952d38a57"
					],
					"folders_order": [],
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folderId": "37368024-f6a8-0f70-85fc-7e876cde9e33"
				},
				{
					"id": "5d3595b3-5e8e-9e33-05ed-855c77298e4e",
					"name": "Headers",
					"description": "The following set of endpoints allow one to see the headers being sent as part of a request and to get a custom set of headers as part of response.\n\nHTTP header fields provide required information about the request or response, or about the object sent in the message body. Both request headers and response headers can be controlled using these endpoints.",
					"auth": null,
					"events": null,
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folder": null,
					"order": [
						"da16c006-6293-c1fe-ea42-e9ba8a5e68b1",
						"e50f9111-3a52-a325-47f1-fc702bea1fff"
					],
					"folders_order": [],
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folderId": "5d3595b3-5e8e-9e33-05ed-855c77298e4e"
				},
				{
					"id": "9a4c3bce-30f7-a496-c9ec-78afecbf1545",
					"name": "Request Methods",
					"description": "HTTP has multiple request \"verbs\", such as `GET`, `PUT`, `POST`, `DELETE`,\n`PATCH`, `HEAD`, etc. \n\nAn HTTP Method (verb) defines how a request should be interpreted by a server. \nThe endpoints in this section demonstrate various HTTP Verbs. Postman supports \nall the HTTP Verbs, including some rarely used ones, such as `PROPFIND`, `UNLINK`, \netc.\n\nFor details about HTTP Verbs, refer to [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9)\n",
					"auth": null,
					"events": null,
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folder": null,
					"order": [
						"078883ea-ac9e-842e-8f41-784b59a33722",
						"1eb1cf9d-2be7-4060-f554-73cd13940174",
						"083e46e7-53ea-87b1-8104-f8917ce58a17",
						"12c51acc-50d2-2d9b-10d6-cc80e3a10d70",
						"8c53212f-42cd-cb37-6e02-08c47a7c8bb1",
						"1f0fad16-6bff-5130-2056-7f4af6b18912"
					],
					"folders_order": [],
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folderId": "9a4c3bce-30f7-a496-c9ec-78afecbf1545"
				},
				{
					"id": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
					"name": "Utilities",
					"description": "",
					"auth": null,
					"events": null,
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folder": null,
					"order": [
						"6cfd22d8-26cc-7d3e-cf50-16d400211a76",
						"159a89e2-110d-0785-9dd7-9e73b2d6878b",
						"0189572f-509e-efe0-686d-eed4b3d2f1f0",
						"154510d1-65a8-a2d0-f157-aa2c694d7be7",
						"fd961ad0-ab24-68d8-4be5-573e8585d526",
						"5d3b31c0-fa26-ee03-5c1b-3715825d811d",
						"39a204d5-944a-59d3-2dfe-90fd378cc3da"
					],
					"folders_order": [],
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folderId": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae"
				},
				{
					"id": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"name": "Utilities / Date and Time",
					"description": "A set of `/time/*` mounted requests to perform date-time manipulations, among other operations.\n",
					"auth": null,
					"events": null,
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folder": null,
					"order": [
						"2881587c-bd9f-0ed1-7c31-525e4ed5306c",
						"54dfe6f2-5887-1078-1f3c-3cf36acc648e",
						"c38e8be7-1739-2108-1804-a8b171c75298",
						"f922a99e-6e96-ded7-ac6f-3ca6f958987d",
						"4cef08e8-75d3-2a31-e703-115cf976e75e",
						"b4a2e234-3b0c-1a3e-14f8-5cafd567ee08",
						"4dc695e5-6b1e-1edf-c68d-014139c59d7e",
						"e8a83301-4e86-1e6c-e88c-2cbedc1524d6",
						"b709b99c-3347-40fc-2c21-98ceb7f9e267",
						"47f089f3-196e-fb13-fdf6-1d62f85ad96f",
						"8cc2e733-7e68-8ad8-efd1-5393510a300a",
						"1ef02347-9a4d-5d6a-1b75-144dd6de641f"
					],
					"folders_order": [],
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folderId": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1"
				},
				{
					"id": "084b21bd-d250-180b-5ed8-94cfaca39fdd",
					"name": "Utilities / Postman Collection",
					"description": "",
					"auth": null,
					"events": null,
					"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folder": null,
					"order": [
						"fffc59d5-1e2d-ccc8-2101-2f7b9216be40",
						"dc8d6e30-c1cf-9d98-4b95-fc1ca6196511"
					],
					"folders_order": [],
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"folderId": "084b21bd-d250-180b-5ed8-94cfaca39fdd"
				}
			],
			"requests": [
				{
					"id": "0189572f-509e-efe0-686d-eed4b3d2f1f0",
					"name": "Delay Response",
					"url": "https://postman-echo.com/delay/3",
					"description": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"response body has key delay\"] = 'delay' in responseJSON;",
									"}",
									"catch (e) { }",
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"folder": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
					"responses": [
						{
							"id": "64f3f9f5-e3ca-9cdd-590c-88820be2f442",
							"name": "success-response",
							"status": "",
							"mime": "",
							"language": "json",
							"text": "{\"delay\":\"3\"}",
							"responseCode": {
								"code": 200,
								"name": "OK",
								"fromServer": true
							},
							"requestObject": {
								"url": "https://echo.getpostman.com/delay/3",
								"headers": [],
								"data": [],
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "13",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Mon, 02 Jan 2017 09:19:03 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.10.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								}
							],
							"cookies": [
								{
									"url": "https://echo.getpostman.com/delay/3",
									"name": "sails.sid",
									"value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ",
									"domain": "echo.getpostman.com",
									"secure": false,
									"httpOnly": true,
									"expirationDate": 2147463847,
									"path": "/"
								}
							],
							"request": "0189572f-509e-efe0-686d-eed4b3d2f1f0",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "var responseJSON;\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests[\"response body has key delay\"] = 'delay' in responseJSON;\n}\ncatch (e) { }\ntests[\"response code is 200\"] = responseCode.code === 200;\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "078883ea-ac9e-842e-8f41-784b59a33722",
					"name": "GET Request",
					"url": "https://postman-echo.com/get?test=123",
					"description": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "test",
							"value": "123"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"tests['response json contains headers'] = _.has(responseJSON, 'headers');",
									"tests['response json contains args'] = _.has(responseJSON, 'args');",
									"tests['response json contains url'] = _.has(responseJSON, 'url');",
									"",
									"tests['args key contains argument passed as url parameter'] = ('test' in responseJSON.args);",
									"tests['args passed via request url params has value \"123\"'] = (_.get(responseJSON, 'args.test') === \"123\");"
								]
							}
						}
					],
					"folder": "9a4c3bce-30f7-a496-c9ec-78afecbf1545",
					"preRequestScript": null,
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\ntests['response json contains headers'] = _.has(responseJSON, 'headers');\ntests['response json contains args'] = _.has(responseJSON, 'args');\ntests['response json contains url'] = _.has(responseJSON, 'url');\n\ntests['args key contains argument passed as url parameter'] = ('test' in responseJSON.args);\ntests['args passed via request url params has value \"123\"'] = (_.get(responseJSON, 'args.test') === \"123\");",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "083e46e7-53ea-87b1-8104-f8917ce58a17",
					"name": "POST Form Data",
					"url": "https://postman-echo.com/post",
					"description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
					"data": [
						{
							"key": "strange",
							"value": "boom",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "urlencoded",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/x-www-form-urlencoded"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'form');",
									"tests['response matches the data posted'] = (responseJSON.form && responseJSON.form.strange === 'boom');"
								]
							}
						}
					],
					"folder": "9a4c3bce-30f7-a496-c9ec-78afecbf1545",
					"preRequestScript": null,
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has post data'] = _.has(responseJSON, 'form');\ntests['response matches the data posted'] = (responseJSON.form && responseJSON.form.strange === 'boom');",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "Content-Type: application/x-www-form-urlencoded\n",
					"pathVariables": {}
				},
				{
					"id": "12c51acc-50d2-2d9b-10d6-cc80e3a10d70",
					"name": "PUT Request",
					"url": "https://postman-echo.com/put",
					"description": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
					"data": [],
					"dataMode": "raw",
					"headerData": [],
					"method": "PUT",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								]
							}
						}
					],
					"folder": "9a4c3bce-30f7-a496-c9ec-78afecbf1545",
					"preRequestScript": null,
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has PUT data'] = _.has(responseJSON, 'data');\ntests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"rawModeData": "Etiam mi lacus, cursus vitae felis et, blandit pellentesque neque. Vestibulum eget nisi a tortor commodo dignissim.\nQuisque ipsum ligula, faucibus a felis a, commodo elementum nisl. Mauris vulputate sapien et tincidunt viverra. Donec vitae velit nec metus.",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "154510d1-65a8-a2d0-f157-aa2c694d7be7",
					"name": "Get UTF8 Encoded Response",
					"url": "https://postman-echo.com/encoding/utf8",
					"description": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"folder": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
					"preRequestScript": null,
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "159a89e2-110d-0785-9dd7-9e73b2d6878b",
					"name": "Streamed Response",
					"url": "https://postman-echo.com/stream/10",
					"description": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"response is sent in chunks\"] = (postman.getResponseHeader('Transfer-Encoding') === 'chunked')",
									""
								]
							}
						}
					],
					"folder": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
					"preRequestScript": null,
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"response is sent in chunks\"] = (postman.getResponseHeader('Transfer-Encoding') === 'chunked')\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "1eb1cf9d-2be7-4060-f554-73cd13940174",
					"name": "POST Raw Text",
					"url": "https://postman-echo.com/post",
					"description": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "text/plain"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has post data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);",
									"",
									"tests[\"content-type equals text/plain\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'text/plain');"
								]
							}
						}
					],
					"folder": "9a4c3bce-30f7-a496-c9ec-78afecbf1545",
					"preRequestScript": null,
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has post data'] = _.has(responseJSON, 'data');\ntests['response matches the data posted'] = (responseJSON.data && responseJSON.data.length === 256);\n\ntests[\"content-type equals text/plain\"] = responseJSON && responseJSON.headers && (responseJSON.headers[\"content-type\"] === 'text/plain');",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"rawModeData": "Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium. Praesent neque quam, tincidunt nec leo eget, rutrum vehicula magna.\nMaecenas consequat elementum elit, id semper sem tristique et. Integer pulvinar enim quis consectetur interdum volutpat.",
					"headers": "Content-Type: text/plain\n",
					"pathVariables": {}
				},
				{
					"id": "1ef02347-9a4d-5d6a-1b75-144dd6de641f",
					"name": "Leap year check",
					"url": "https://postman-echo.com/time/leap?timestamp=2016-10-10",
					"description": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Comparsion was correct\"] = JSON.parse(responseBody).leap === true;"
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Comparsion was correct\"] = JSON.parse(responseBody).leap === true;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "1f0fad16-6bff-5130-2056-7f4af6b18912",
					"name": "DELETE Request",
					"url": "https://postman-echo.com/delete",
					"description": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
					"data": [],
					"dataMode": "raw",
					"headerData": [],
					"method": "DELETE",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								]
							}
						}
					],
					"folder": "9a4c3bce-30f7-a496-c9ec-78afecbf1545",
					"preRequestScript": null,
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has PUT data'] = _.has(responseJSON, 'data');\ntests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"rawModeData": "Donec fermentum, nisi sed cursus eleifend, nulla tortor ultricies tellus, ut vehicula orci arcu ut velit. In volutpat egestas dapibus.\nMorbi condimentum vestibulum sapien. Etiam dignissim diam quis eros lobortis gravida vel lobortis est. Etiam gravida sed.",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "2881587c-bd9f-0ed1-7c31-525e4ed5306c",
					"name": "Current UTC time",
					"url": "https://postman-echo.com/time/now",
					"description": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Time is in a valid format\"] = responseBody === postman.getResponseHeader(\"date\");",
									""
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"responses": [
						{
							"id": "f3f2053b-e446-a8b1-aee2-124618275f94",
							"name": "time as text",
							"status": "",
							"mime": "",
							"language": "html",
							"text": "Wed, 11 Jan 2017 10:27:12 GMT",
							"responseCode": {
								"code": 200,
								"name": "OK",
								"fromServer": true
							},
							"requestObject": {
								"url": "https://postman-echo.com/time/now",
								"headers": [],
								"data": null,
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "49",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "text/html; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 11 Jan 2017 10:27:12 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.10.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly",
									"name": "set-cookie",
									"description": ""
								}
							],
							"cookies": [
								{
									"url": "https://postman-echo.com/time/now",
									"name": "sails.sid",
									"value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig",
									"domain": "postman-echo.com",
									"secure": false,
									"httpOnly": true,
									"expirationDate": 2147463847,
									"path": "/"
								}
							],
							"request": "2881587c-bd9f-0ed1-7c31-525e4ed5306c",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Time is in a valid format\"] = responseBody === postman.getResponseHeader(\"date\");\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "2f79ab5b-9029-56c2-7b05-52047790d670",
					"name": "OAuth1.0 Verify Signature",
					"url": "https://postman-echo.com/oauth1",
					"description": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
					"data": [
						{
							"key": "code",
							"value": "xWnkliVQJURqB2x1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text",
							"enabled": true
						},
						{
							"key": "redirect_uri",
							"value": "https://www.getpostman.com/oauth2/callback",
							"type": "text",
							"enabled": true
						},
						{
							"key": "client_id",
							"value": "abc123",
							"type": "text",
							"enabled": true
						},
						{
							"key": "client_secret",
							"value": "ssh-secret",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "oauth1",
						"oauth1": [
							{
								"key": "consumerKey",
								"value": "RKCGzna7bv9YD57c",
								"type": "string"
							},
							{
								"key": "consumerSecret",
								"value": "D+EdQ-gs$-%@2Nu7",
								"type": "string"
							},
							{
								"key": "token",
								"value": "",
								"type": "string"
							},
							{
								"key": "tokenSecret",
								"value": "",
								"type": "string"
							},
							{
								"key": "signatureMethod",
								"value": "HMAC-SHA1",
								"type": "string"
							},
							{
								"key": "timestamp",
								"value": 1472121255,
								"type": "number"
							},
							{
								"key": "nonce",
								"value": "e5VR16",
								"type": "string"
							},
							{
								"key": "version",
								"value": "1.0",
								"type": "string"
							},
							{
								"key": "realm",
								"value": "",
								"type": "string"
							},
							{
								"key": "addParamsToHeader",
								"value": true,
								"type": "boolean"
							},
							{
								"key": "autoAddParam",
								"type": "any"
							},
							{
								"key": "addEmptyParamsToSign",
								"value": false,
								"type": "boolean"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"var body = JSON.parse(responseBody);",
									"tests[\"Body contains status pass\"] = body[\"status\"] == \"pass\""
								]
							}
						}
					],
					"folder": "df815c41-a76b-4b5b-7129-ea59275f254b",
					"responses": [
						{
							"id": "d234f0e3-683c-1705-d4b1-c94f6c27fa52",
							"name": "200",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": {
								"url": "https://echo.getpostman.com/oauth1",
								"headers": [
									{
										"key": "Authorization",
										"name": "Authorization",
										"value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
									}
								],
								"data": [
									{
										"key": "code",
										"value": "xWnkliVQJURqB2x1",
										"type": "text",
										"enabled": true
									},
									{
										"key": "grant_type",
										"value": "authorization_code",
										"type": "text",
										"enabled": true
									},
									{
										"key": "redirect_uri",
										"value": "https://www.getpostman.com/oauth2/callback",
										"type": "text",
										"enabled": true
									},
									{
										"key": "client_id",
										"value": "abc123",
										"type": "text",
										"enabled": true
									},
									{
										"key": "client_secret",
										"value": "ssh-secret",
										"type": "text",
										"enabled": true
									}
								],
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Expose-Headers",
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Encoding",
									"key": "Content-Encoding",
									"value": "gzip",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "95",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 25 Aug 2016 10:34:23 GMT",
									"description": ""
								},
								{
									"name": "ETag",
									"key": "ETag",
									"value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\"",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.8.1",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								}
							],
							"cookies": [],
							"request": "2f79ab5b-9029-56c2-7b05-52047790d670",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						},
						{
							"id": "d536f1d6-ad89-2a2d-94b3-8aa11f28f197",
							"name": "401",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
							"responseCode": {
								"code": 401,
								"name": "Unauthorized"
							},
							"requestObject": {
								"url": "https://echo.getpostman.com/oauth1",
								"headers": [
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
									}
								],
								"data": [
									{
										"key": "code",
										"value": "xWnkliVQJURqB2x1",
										"type": "text",
										"enabled": true
									},
									{
										"key": "grant_type",
										"value": "authorization_code",
										"type": "text",
										"enabled": true
									},
									{
										"key": "redirect_uri",
										"value": "https://www.getpostman.com/oauth2/callback",
										"type": "text",
										"enabled": true
									},
									{
										"key": "client_id",
										"value": "abc123",
										"type": "text",
										"enabled": true
									},
									{
										"key": "client_secret",
										"value": "ssh-secret",
										"type": "text",
										"enabled": true
									}
								],
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Expose-Headers",
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "536",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 25 Aug 2016 10:34:55 GMT",
									"description": ""
								},
								{
									"name": "ETag",
									"key": "ETag",
									"value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\"",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.8.1",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								}
							],
							"cookies": [],
							"request": "2f79ab5b-9029-56c2-7b05-52047790d670",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\nvar body = JSON.parse(responseBody);\ntests[\"Body contains status pass\"] = body[\"status\"] == \"pass\"",
					"currentHelper": "oAuth1",
					"helperAttributes": {
						"id": "oAuth1",
						"consumerKey": "RKCGzna7bv9YD57c",
						"consumerSecret": "D+EdQ-gs$-%@2Nu7",
						"token": "",
						"tokenSecret": "",
						"signatureMethod": "HMAC-SHA1",
						"timestamp": 1472121255,
						"nonce": "e5VR16",
						"version": "1.0",
						"realm": "",
						"header": true,
						"includeEmpty": false
					},
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "39a204d5-944a-59d3-2dfe-90fd378cc3da",
					"name": "IP address in JSON format",
					"url": "https://postman-echo.com/ip",
					"description": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var body = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Valid response structure\"] = /^[a-fA-F:\\.0-9]+$/.test(body.ip);"
								]
							}
						}
					],
					"folder": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
					"preRequestScript": null,
					"tests": "var body = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Valid response structure\"] = /^[a-fA-F:\\.0-9]+$/.test(body.ip);",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "3de3b135-b3cc-3a68-ba27-b6d373e03c8c",
					"name": "Set Cookies",
					"url": "https://postman-echo.com/cookies/set?foo1=bar1&foo2=bar2",
					"description": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "foo1",
							"value": "bar1"
						},
						{
							"key": "foo2",
							"value": "bar2"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// handle case where it is 304",
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Status code is 302 or 200\"] = true;",
									"    tests[\"Body contains cookies\"] = responseBody.has(\"cookies\");",
									"    ",
									"    var body = JSON.parse(responseBody);",
									"    tests[\"Body contains cookie foo1\"] = 'foo1' in body.cookies;",
									"    tests[\"Body contains cookie foo2\"] = 'foo2' in body.cookies;",
									"",
									"}",
									"else if (responseCode.code === 302) {",
									"    tests[\"Status code is 302 or 200\"] = true;",
									"    tests[\"Body has redirection message\"] = responseBody.has(\"Found. Redirecting to /cookies\")",
									"}",
									"else {",
									"    tests[\"Status code is 302 or 200\"] = false;",
									"}",
									"",
									"tests[\"foo1 cookie is set\"] = _.get(postman.getResponseCookie('foo1'), 'value') === 'bar1';",
									"",
									"tests[\"foo2 cookie is set\"] = _.get(postman.getResponseCookie('foo2'), 'value') === 'bar2';"
								]
							}
						}
					],
					"folder": "37368024-f6a8-0f70-85fc-7e876cde9e33",
					"responses": [
						{
							"id": "6c09f286-f74c-4d60-c349-f4a7ff7bac28",
							"name": "Cookies",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"cookies\":{\"foo1\":\"bar\",\"foo2\":\"bar\"}}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": null,
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Encoding",
									"key": "Content-Encoding",
									"value": "gzip",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "51",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 29 Oct 2015 06:15:28 GMT",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.6.2",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								},
								{
									"name": "X-Powered-By",
									"key": "X-Powered-By",
									"value": "Sails <sailsjs.org>",
									"description": ""
								}
							],
							"cookies": [],
							"request": "3de3b135-b3cc-3a68-ba27-b6d373e03c8c",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "// handle case where it is 304\n\nif (responseCode.code === 200) {\n    tests[\"Status code is 302 or 200\"] = true;\n    tests[\"Body contains cookies\"] = responseBody.has(\"cookies\");\n    \n    var body = JSON.parse(responseBody);\n    tests[\"Body contains cookie foo1\"] = 'foo1' in body.cookies;\n    tests[\"Body contains cookie foo2\"] = 'foo2' in body.cookies;\n\n}\nelse if (responseCode.code === 302) {\n    tests[\"Status code is 302 or 200\"] = true;\n    tests[\"Body has redirection message\"] = responseBody.has(\"Found. Redirecting to /cookies\")\n}\nelse {\n    tests[\"Status code is 302 or 200\"] = false;\n}\n\ntests[\"foo1 cookie is set\"] = _.get(postman.getResponseCookie('foo1'), 'value') === 'bar1';\n\ntests[\"foo2 cookie is set\"] = _.get(postman.getResponseCookie('foo2'), 'value') === 'bar2';",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "42c867ca-e72b-3307-169b-26a478b00641",
					"name": "Basic Auth",
					"url": "https://postman-echo.com/basic-auth",
					"description": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Authorization",
							"value": "Basic cG9zdG1hbjpwYXNzd29yZA=="
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "basic",
						"basic": [
							{
								"key": "username",
								"value": "postman",
								"type": "string"
							},
							{
								"key": "password",
								"value": "password",
								"type": "string"
							},
							{
								"key": "saveHelperData",
								"value": true,
								"type": "boolean"
							},
							{
								"key": "showPassword",
								"value": false,
								"type": "boolean"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"Body contains authenticated\"] = responseBody.has(\"authenticated\");"
								]
							}
						}
					],
					"folder": "df815c41-a76b-4b5b-7129-ea59275f254b",
					"responses": [
						{
							"id": "97223e54-e9ac-810d-41df-6b53e1c917e4",
							"name": "200",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"authenticated\":true}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": null,
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Encoding",
									"key": "Content-Encoding",
									"value": "gzip",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "42",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Sat, 31 Oct 2015 06:38:25 GMT",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.6.2",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								},
								{
									"name": "X-Powered-By",
									"key": "X-Powered-By",
									"value": "Sails <sailsjs.org>",
									"description": ""
								}
							],
							"cookies": [],
							"request": "42c867ca-e72b-3307-169b-26a478b00641",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"Body contains authenticated\"] = responseBody.has(\"authenticated\");",
					"currentHelper": "basicAuth",
					"helperAttributes": {
						"id": "basic",
						"username": "postman",
						"password": "password",
						"saveToRequest": true
					},
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==\n",
					"pathVariables": {}
				},
				{
					"id": "47f089f3-196e-fb13-fdf6-1d62f85ad96f",
					"name": "After comparisons",
					"url": "https://postman-echo.com/time/after?timestamp=2016-10-10&target=2017-10-10",
					"description": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						},
						{
							"key": "target",
							"value": "2017-10-10"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var after = JSON.parse(responseBody).after;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Comparsion was correct\"] = after === false;"
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "var after = JSON.parse(responseBody).after;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Comparsion was correct\"] = after === false;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "4cef08e8-75d3-2a31-e703-115cf976e75e",
					"name": "Time addition",
					"url": "https://postman-echo.com/time/add?timestamp=2016-10-10&years=100",
					"description": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						},
						{
							"key": "years",
							"value": "100"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var sum = JSON.parse(responseBody).sum;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "var sum = JSON.parse(responseBody).sum;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "4dc695e5-6b1e-1edf-c68d-014139c59d7e",
					"name": "Start of time",
					"url": "https://postman-echo.com/time/start?timestamp=2016-10-10&unit=month",
					"description": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						},
						{
							"key": "unit",
							"value": "month"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var start = JSON.parse(responseBody).start;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "var start = JSON.parse(responseBody).start;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "54dfe6f2-5887-1078-1f3c-3cf36acc648e",
					"name": "Timestamp validity",
					"url": "https://postman-echo.com/time/valid?timestamp=2016-10-10",
					"description": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var validity = JSON.parse(responseBody).valid;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Timestamp is valid\"] = validity === true;",
									""
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"responses": [
						{
							"id": "7aa5b2c4-70b5-d5f1-843b-ab90365ee59e",
							"name": "Invalid Timestamp",
							"status": "",
							"mime": "",
							"language": "json",
							"text": "{\"valid\":false}",
							"responseCode": {
								"code": 200,
								"name": "OK",
								"fromServer": true
							},
							"requestObject": {
								"url": "https://postman-echo.com/time/valid?timestamp=2016-10-10",
								"headers": [],
								"data": null,
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "15",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 11 Jan 2017 10:27:53 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"f-/i9mO/upK91ZtL0BkKFGtw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.10.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI; Path=/; HttpOnly",
									"name": "set-cookie",
									"description": ""
								}
							],
							"cookies": [
								{
									"url": "https://postman-echo.com/time/valid?timestamp=2016-10-1a",
									"name": "sails.sid",
									"value": "s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI",
									"domain": "postman-echo.com",
									"secure": false,
									"httpOnly": true,
									"expirationDate": 2147463847,
									"path": "/"
								}
							],
							"request": "54dfe6f2-5887-1078-1f3c-3cf36acc648e",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						},
						{
							"id": "9fb04532-776f-0d8b-529a-9e3887fdebe4",
							"name": "Valid Timestamp",
							"status": "",
							"mime": "",
							"language": "json",
							"text": "{\"valid\":true}",
							"responseCode": {
								"code": 200,
								"name": "OK",
								"fromServer": true
							},
							"requestObject": {
								"url": "https://postman-echo.com/time/valid?timestamp=2016-10-10",
								"headers": [],
								"data": null,
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Length",
									"value": "14",
									"name": "Content-Length",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 11 Jan 2017 10:27:33 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.10.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI; Path=/; HttpOnly",
									"name": "set-cookie",
									"description": ""
								}
							],
							"cookies": [
								{
									"url": "https://postman-echo.com/time/valid?timestamp=2016-10-10",
									"name": "sails.sid",
									"value": "s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI",
									"domain": "postman-echo.com",
									"secure": false,
									"httpOnly": true,
									"expirationDate": 2147463847,
									"path": "/"
								}
							],
							"request": "54dfe6f2-5887-1078-1f3c-3cf36acc648e",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "var validity = JSON.parse(responseBody).valid;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Timestamp is valid\"] = validity === true;\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "5d3b31c0-fa26-ee03-5c1b-3715825d811d",
					"name": "Deflate Compressed Response",
					"url": "https://postman-echo.com/deflate",
					"description": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"",
									"try {",
									"    var data = JSON.parse(responseBody);",
									"    tests[\"Body contains deflated\"] = responseBody.has(\"deflated\");",
									"    tests[\"Body contains headers\"] = responseBody.has(\"headers\");",
									"    tests[\"Body contains method\"] = responseBody.has(\"method\");",
									"}",
									"catch(e) {",
									"    console.log('Cannot parse response,probably not a JSON');",
									"}",
									""
								]
							}
						}
					],
					"folder": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
					"preRequestScript": null,
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\n\ntry {\n    var data = JSON.parse(responseBody);\n    tests[\"Body contains deflated\"] = responseBody.has(\"deflated\");\n    tests[\"Body contains headers\"] = responseBody.has(\"headers\");\n    tests[\"Body contains method\"] = responseBody.has(\"method\");\n}\ncatch(e) {\n    console.log('Cannot parse response,probably not a JSON');\n}\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "6cfd22d8-26cc-7d3e-cf50-16d400211a76",
					"name": "Response Status Code",
					"url": "https://postman-echo.com/status/200",
					"description": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests[\"Status equals 200\"] = responseJSON.status === 200;",
									"}",
									"catch (e) { }",
									"tests[\"Body contains status\"] = responseBody.has(\"status\");",
									"",
									""
								]
							}
						}
					],
					"folder": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
					"responses": [
						{
							"id": "a2bda27d-2c7b-eb8e-1740-be4e1fe9a079",
							"name": "200",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"status\":200}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": {
								"url": "https://echo.getpostman.com/status/200",
								"headers": [],
								"data": [],
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "14",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 31 Mar 2016 11:58:47 GMT",
									"description": ""
								},
								{
									"name": "ETag",
									"key": "ETag",
									"value": "W/\"e-1056260003\"",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.6.2",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								},
								{
									"name": "X-Powered-By",
									"key": "X-Powered-By",
									"value": "Sails <sailsjs.org>",
									"description": ""
								}
							],
							"cookies": [
								{
									"domain": ".getpostman.com",
									"expirationDate": 1460718898.0598,
									"hostOnly": false,
									"httpOnly": false,
									"name": "getpostmanlogin",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "yes"
								},
								{
									"domain": ".getpostman.com",
									"expirationDate": 1460718898.06,
									"hostOnly": false,
									"httpOnly": false,
									"name": "postman.sid",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
								},
								{
									"domain": ".echo.getpostman.com",
									"expirationDate": 1522494981,
									"hostOnly": false,
									"httpOnly": false,
									"name": "_ga",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "GA1.3.1703443399.1459422978"
								},
								{
									"domain": "echo.getpostman.com",
									"hostOnly": true,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"session": true,
									"storeId": "0",
									"value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
								}
							],
							"request": "6cfd22d8-26cc-7d3e-cf50-16d400211a76",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "var responseJSON;\ntry {\n    responseJSON = JSON.parse(responseBody); \n    tests[\"Status equals 200\"] = responseJSON.status === 200;\n}\ncatch (e) { }\ntests[\"Body contains status\"] = responseBody.has(\"status\");\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "70ed7920-ead1-2d20-645a-c716ab0fd137",
					"name": "DigestAuth Request",
					"url": "https://postman-echo.com/digest-auth",
					"description": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
					"data": [
						{
							"key": "code",
							"value": "xWnkliVQJURqB2x1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "grant_type",
							"value": "authorization_code",
							"type": "text",
							"enabled": true
						},
						{
							"key": "redirect_uri",
							"value": "https://www.getpostman.com/oauth2/callback",
							"type": "text",
							"enabled": true
						},
						{
							"key": "client_id",
							"value": "abc123",
							"type": "text",
							"enabled": true
						},
						{
							"key": "client_secret",
							"value": "ssh-secret",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 401\"] = responseCode.code === 401;",
									"tests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));",
									"",
									"var authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),",
									"    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,",
									"    realmEnd = authenticateHeader.indexOf('\"',realmStart),",
									"    realm = authenticateHeader.slice(realmStart,realmEnd),",
									"    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,",
									"    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),",
									"    nonce = authenticateHeader.slice(nonceStart,nonceEnd);",
									"    ",
									"postman.setGlobalVariable('echo_digest_realm', realm);",
									"postman.setGlobalVariable('echo_digest_nonce', nonce);"
								]
							}
						}
					],
					"folder": "09ddd67c-13fe-4626-8dd4-fc64f1fc27b7",
					"preRequestScript": null,
					"tests": "tests[\"response code is 401\"] = responseCode.code === 401;\ntests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));\n\nvar authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),\n    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,\n    realmEnd = authenticateHeader.indexOf('\"',realmStart),\n    realm = authenticateHeader.slice(realmStart,realmEnd),\n    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,\n    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),\n    nonce = authenticateHeader.slice(nonceStart,nonceEnd);\n    \npostman.setGlobalVariable('echo_digest_realm', realm);\npostman.setGlobalVariable('echo_digest_nonce', nonce);",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "843acf02-a33c-c4bb-d742-c07b9212e4b0",
					"name": "Hawk Auth",
					"url": "https://postman-echo.com/auth/hawk",
					"description": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
					"data": [
						{
							"key": "access_token",
							"value": "xyz1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "id",
							"value": "U1",
							"type": "text",
							"enabled": true
						},
						{
							"key": "server_secret",
							"value": "zeppelin",
							"type": "text",
							"enabled": true
						},
						{
							"key": "admin",
							"value": "true",
							"type": "text",
							"enabled": true
						}
					],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "hawk",
						"hawk": [
							{
								"key": "authId",
								"value": "dh37fgj492je",
								"type": "string"
							},
							{
								"key": "authKey",
								"value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
								"type": "string"
							},
							{
								"key": "algorithm",
								"value": "sha256",
								"type": "string"
							},
							{
								"key": "user",
								"value": "",
								"type": "string"
							},
							{
								"key": "saveHelperData",
								"value": true,
								"type": "boolean"
							},
							{
								"key": "nonce",
								"value": "RZKGNz",
								"type": "string"
							},
							{
								"key": "extraData",
								"type": "any"
							},
							{
								"key": "appId",
								"type": "any"
							},
							{
								"key": "delegation",
								"type": "any"
							},
							{
								"key": "timestamp",
								"value": "",
								"type": "string"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"folder": "df815c41-a76b-4b5b-7129-ea59275f254b",
					"responses": [
						{
							"id": "8bcfebdc-a6fe-7607-cef3-7ee28a0b75a2",
							"name": "Success",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": {
								"url": "https://echo.getpostman.com/auth/hawk",
								"headers": [
									{
										"key": "Authorization",
										"type": "text",
										"name": "Authorization",
										"value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
									}
								],
								"data": [
									{
										"key": "access_token",
										"value": "xyz1",
										"type": "text",
										"enabled": true
									},
									{
										"key": "id",
										"value": "U1",
										"type": "text",
										"enabled": true
									},
									{
										"key": "server_secret",
										"value": "zeppelin",
										"type": "text",
										"enabled": true
									},
									{
										"key": "admin",
										"value": "true",
										"type": "text",
										"enabled": true
									}
								],
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Encoding",
									"key": "Content-Encoding",
									"value": "gzip",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 31 Mar 2016 11:12:16 GMT",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.6.2",
									"description": ""
								},
								{
									"name": "Server-Authorization",
									"key": "Server-Authorization",
									"value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\"",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								},
								{
									"name": "X-Powered-By",
									"key": "X-Powered-By",
									"value": "Sails <sailsjs.org>",
									"description": ""
								},
								{
									"name": "transfer-encoding",
									"key": "transfer-encoding",
									"value": "chunked",
									"description": ""
								}
							],
							"cookies": [
								{
									"domain": ".getpostman.com",
									"expirationDate": 1460717668.0694,
									"hostOnly": false,
									"httpOnly": false,
									"name": "getpostmanlogin",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "yes"
								},
								{
									"domain": ".getpostman.com",
									"expirationDate": 1460717668.0695,
									"hostOnly": false,
									"httpOnly": false,
									"name": "postman.sid",
									"path": "/",
									"secure": false,
									"session": false,
									"storeId": "0",
									"value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
								},
								{
									"domain": "echo.getpostman.com",
									"hostOnly": true,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"session": true,
									"storeId": "0",
									"value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
								}
							],
							"request": "843acf02-a33c-c4bb-d742-c07b9212e4b0",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;",
					"currentHelper": "hawkAuth",
					"helperAttributes": {
						"id": "hawk",
						"hawk_id": "dh37fgj492je",
						"hawk_key": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
						"algorithm": "sha256",
						"user": "",
						"saveToRequest": true,
						"nonce": "RZKGNz",
						"timestamp": ""
					},
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8c53212f-42cd-cb37-6e02-08c47a7c8bb1",
					"name": "PATCH Request",
					"url": "https://postman-echo.com/patch",
					"description": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
					"data": [],
					"dataMode": "raw",
					"headerData": [],
					"method": "PATCH",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"",
									"try { ",
									"    responseJSON = JSON.parse(responseBody); ",
									"    tests['response is valid JSON'] = true;",
									"}",
									"catch (e) { ",
									"    responseJSON = {}; ",
									"    tests['response is valid JSON'] = false;",
									"}",
									"",
									"",
									"tests['response has PUT data'] = _.has(responseJSON, 'data');",
									"tests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);"
								]
							}
						}
					],
					"folder": "9a4c3bce-30f7-a496-c9ec-78afecbf1545",
					"preRequestScript": null,
					"tests": "var responseJSON;\n\ntry { \n    responseJSON = JSON.parse(responseBody); \n    tests['response is valid JSON'] = true;\n}\ncatch (e) { \n    responseJSON = {}; \n    tests['response is valid JSON'] = false;\n}\n\n\ntests['response has PUT data'] = _.has(responseJSON, 'data');\ntests['response matches the data sent in request'] = (responseJSON.data && responseJSON.data.length === 256);",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"rawModeData": "Curabitur auctor, elit nec pulvinar porttitor, ex augue condimentum enim, eget suscipit urna felis quis neque.\nSuspendisse sit amet luctus massa, nec venenatis mi. Suspendisse tincidunt massa at nibh efficitur fringilla. Nam quis congue mi. Etiam volutpat.",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8cc2e733-7e68-8ad8-efd1-5393510a300a",
					"name": "Between timestamps",
					"url": "https://postman-echo.com/time/between?timestamp=2016-10-10&start=2017-10-10&end=2019-10-10",
					"description": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						},
						{
							"key": "start",
							"value": "2017-10-10"
						},
						{
							"key": "end",
							"value": "2019-10-10"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var after = JSON.parse(responseBody).after;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Comparsion was correct\"] = after === false;"
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "var after = JSON.parse(responseBody).after;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Comparsion was correct\"] = after === false;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "8dc08eee-a543-7c1c-297f-b0b7040c35c6",
					"name": "Get Cookies",
					"url": "https://postman-echo.com/cookies",
					"description": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    tests[\"Body contains cookies\"] = responseBody.has(\"cookies\");",
									"    responseJSON = JSON.parse(responseBody);",
									"    tests[\"Cookies object is empty\"] = (Object.keys(responseJSON.cookies).length > 0)",
									"}",
									"catch (e) { }",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									""
								]
							}
						}
					],
					"folder": "37368024-f6a8-0f70-85fc-7e876cde9e33",
					"responses": [
						{
							"id": "403109d9-a2e7-2bf7-9af3-1282aa7d74cd",
							"name": "Cookies",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"cookies\":{\"foo2\":\"bar\"}}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": null,
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Encoding",
									"key": "Content-Encoding",
									"value": "gzip",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "46",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 29 Oct 2015 06:16:29 GMT",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.6.2",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								},
								{
									"name": "X-Powered-By",
									"key": "X-Powered-By",
									"value": "Sails <sailsjs.org>",
									"description": ""
								}
							],
							"cookies": [],
							"request": "8dc08eee-a543-7c1c-297f-b0b7040c35c6",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "var responseJSON;\ntry {\n    tests[\"Body contains cookies\"] = responseBody.has(\"cookies\");\n    responseJSON = JSON.parse(responseBody);\n    tests[\"Cookies object is empty\"] = (Object.keys(responseJSON.cookies).length > 0)\n}\ncatch (e) { }\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "a4c04e32-72cf-0475-07dc-89c23f85cf0c",
					"name": "DigestAuth Success",
					"url": "https://postman-echo.com/digest-auth",
					"description": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "Authorization",
							"value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": {
						"type": "digest",
						"digest": [
							{
								"key": "algorithm",
								"value": "MD5",
								"type": "string"
							},
							{
								"key": "username",
								"value": "postman",
								"type": "string"
							},
							{
								"key": "realm",
								"value": "{{echo_digest_realm}}",
								"type": "string"
							},
							{
								"key": "password",
								"value": "password",
								"type": "string"
							},
							{
								"key": "nonce",
								"value": "{{echo_digest_nonce}}",
								"type": "string"
							},
							{
								"key": "nonceCount",
								"value": "",
								"type": "string"
							},
							{
								"key": "clientNonce",
								"value": "",
								"type": "string"
							},
							{
								"key": "opaque",
								"value": "",
								"type": "string"
							},
							{
								"key": "qop",
								"value": "",
								"type": "string"
							},
							{
								"key": "disableRetryRequest",
								"type": "any"
							}
						]
					},
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"response code is 200\"] = responseCode.code === 200;",
									"tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
								]
							}
						}
					],
					"folder": "09ddd67c-13fe-4626-8dd4-fc64f1fc27b7",
					"responses": [
						{
							"id": "50a1e424-f5a6-3017-3777-6c5d0d381be0",
							"name": "200",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"authenticated\":true}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": null,
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Encoding",
									"key": "Content-Encoding",
									"value": "gzip",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "42",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 29 Oct 2015 06:17:51 GMT",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.6.2",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								},
								{
									"name": "X-Powered-By",
									"key": "X-Powered-By",
									"value": "Sails <sailsjs.org>",
									"description": ""
								}
							],
							"cookies": [],
							"request": "a4c04e32-72cf-0475-07dc-89c23f85cf0c",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "tests[\"response code is 200\"] = responseCode.code === 200;\ntests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");",
					"currentHelper": "digestAuth",
					"helperAttributes": {
						"id": "digest",
						"algorithm": "MD5",
						"username": "postman",
						"realm": "{{echo_digest_realm}}",
						"password": "password",
						"nonce": "{{echo_digest_nonce}}",
						"nonceCount": "",
						"clientNonce": "",
						"opaque": "",
						"qop": ""
					},
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "Authorization: Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\"\n",
					"pathVariables": {}
				},
				{
					"id": "a4f24593-448b-88de-963f-eeb952d38a57",
					"name": "Delete Cookies",
					"url": "https://postman-echo.com/cookies/delete?foo1&foo2",
					"description": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "foo1",
							"value": null
						},
						{
							"key": "foo2",
							"value": null
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"// handle case where it is 304",
									"",
									"if (responseCode.code === 200) {",
									"    tests[\"Status code is 302 or 200\"] = true;",
									"    tests[\"Body contains cookies\"] = responseBody.has(\"cookies\");",
									"    ",
									"    var body = JSON.parse(responseBody);",
									"    tests[\"Body contains cookie foo1\"] = 'foo1' in body.cookies;",
									"    tests[\"Body contains cookie foo2\"] = 'foo2' in body.cookies;",
									"",
									"}",
									"else if (responseCode.code === 302) {",
									"    tests[\"Status code is 302 or 200\"] = true;",
									"    tests[\"Body has redirection message\"] = responseBody.has(\"Found. Redirecting to /cookies\")",
									"}",
									"else {",
									"    tests[\"Status code is 302 or 200\"] = false;",
									"}",
									"",
									"tests[\"foo1 cookie is set\"] = _.get(postman.getResponseCookie('foo1'), 'value') === undefined;",
									"",
									"tests[\"foo2 cookie is set\"] = _.get(postman.getResponseCookie('foo2'), 'value') === undefined;"
								]
							}
						}
					],
					"folder": "37368024-f6a8-0f70-85fc-7e876cde9e33",
					"responses": [
						{
							"id": "522b3689-fb79-32fe-a253-7fb170b65555",
							"name": "Cookies Response",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"cookies\":{\"foo2\":\"bar\"}}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": null,
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Encoding",
									"key": "Content-Encoding",
									"value": "gzip",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "46",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 29 Oct 2015 06:16:00 GMT",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.6.2",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								},
								{
									"name": "X-Powered-By",
									"key": "X-Powered-By",
									"value": "Sails <sailsjs.org>",
									"description": ""
								}
							],
							"cookies": [],
							"request": "a4f24593-448b-88de-963f-eeb952d38a57",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "// handle case where it is 304\n\nif (responseCode.code === 200) {\n    tests[\"Status code is 302 or 200\"] = true;\n    tests[\"Body contains cookies\"] = responseBody.has(\"cookies\");\n    \n    var body = JSON.parse(responseBody);\n    tests[\"Body contains cookie foo1\"] = 'foo1' in body.cookies;\n    tests[\"Body contains cookie foo2\"] = 'foo2' in body.cookies;\n\n}\nelse if (responseCode.code === 302) {\n    tests[\"Status code is 302 or 200\"] = true;\n    tests[\"Body has redirection message\"] = responseBody.has(\"Found. Redirecting to /cookies\")\n}\nelse {\n    tests[\"Status code is 302 or 200\"] = false;\n}\n\ntests[\"foo1 cookie is set\"] = _.get(postman.getResponseCookie('foo1'), 'value') === undefined;\n\ntests[\"foo2 cookie is set\"] = _.get(postman.getResponseCookie('foo2'), 'value') === undefined;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b4a2e234-3b0c-1a3e-14f8-5cafd567ee08",
					"name": "Time subtraction",
					"url": "https://postman-echo.com/time/subtract?timestamp=2016-10-10&years=100",
					"description": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						},
						{
							"key": "years",
							"value": "100"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var difference = JSON.parse(responseBody).difference;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "var difference = JSON.parse(responseBody).difference;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "b709b99c-3347-40fc-2c21-98ceb7f9e267",
					"name": "Before comparisons",
					"url": "https://postman-echo.com/time/before?timestamp=2016-10-10&target=2017-10-10",
					"description": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						},
						{
							"key": "target",
							"value": "2017-10-10"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var before = JSON.parse(responseBody).before;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Comparsion was correct\"] = before === true;"
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "var before = JSON.parse(responseBody).before;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Comparsion was correct\"] = before === true;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "c38e8be7-1739-2108-1804-a8b171c75298",
					"name": "Format timestamp",
					"url": "https://postman-echo.com/time/format?timestamp=2016-10-10&format=mm",
					"description": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						},
						{
							"key": "format",
							"value": "mm"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var format = JSON.parse(responseBody).format;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Formatted result is valid\"] = format === \"20\";",
									""
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "var format = JSON.parse(responseBody).format;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Formatted result is valid\"] = format === \"20\";\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "da16c006-6293-c1fe-ea42-e9ba8a5e68b1",
					"name": "Request Headers",
					"url": "https://postman-echo.com/headers",
					"description": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
					"data": [],
					"dataMode": "params",
					"headerData": [
						{
							"key": "my-sample-header",
							"value": "Lorem ipsum dolor sit amet"
						}
					],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var responseJSON;",
									"try {",
									"    tests[\"Body contains headers\"] = responseBody.has(\"headers\");",
									"    responseJSON = JSON.parse(responseBody);",
									"    tests[\"Header contains host\"] = \"host\" in responseJSON.headers;",
									"    tests[\"Header contains test parameter sent as part of request header\"] = \"my-sample-header\" in responseJSON.headers;",
									"}",
									"catch (e) { }",
									"",
									"",
									"",
									""
								]
							}
						}
					],
					"folder": "5d3595b3-5e8e-9e33-05ed-855c77298e4e",
					"responses": [
						{
							"id": "881f141f-44c5-702f-211d-475360c6ccb3",
							"name": "my-sample-header",
							"status": "",
							"mime": "",
							"language": "javascript",
							"text": "{\"headers\":{\"host\":\"echo.getpostman.com\",\"accept\":\"*/*\",\"accept-encoding\":\"gzip, deflate, sdch\",\"accept-language\":\"en-US,en;q=0.8\",\"cache-control\":\"no-cache\",\"my-sample-header\":\"Lorem ipsum dolor sit amet\",\"postman-token\":\"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\"x-forwarded-port\":\"443\",\"x-forwarded-proto\":\"https\"}}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": {
								"url": "https://echo.getpostman.com/headers",
								"headers": [
									{
										"key": "my-sample-header",
										"value": "Lorem ipsum dolor sit amet",
										"enabled": true
									}
								],
								"data": [],
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Encoding",
									"key": "Content-Encoding",
									"value": "gzip",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "342",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 31 Mar 2016 11:14:00 GMT",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.6.2",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								},
								{
									"name": "X-Powered-By",
									"key": "X-Powered-By",
									"value": "Sails <sailsjs.org>",
									"description": ""
								}
							],
							"cookies": [
								{
									"domain": "echo.getpostman.com",
									"hostOnly": true,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"session": true,
									"storeId": "0",
									"value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
								}
							],
							"request": "da16c006-6293-c1fe-ea42-e9ba8a5e68b1",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "var responseJSON;\ntry {\n    tests[\"Body contains headers\"] = responseBody.has(\"headers\");\n    responseJSON = JSON.parse(responseBody);\n    tests[\"Header contains host\"] = \"host\" in responseJSON.headers;\n    tests[\"Header contains test parameter sent as part of request header\"] = \"my-sample-header\" in responseJSON.headers;\n}\ncatch (e) { }\n\n\n\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "my-sample-header: Lorem ipsum dolor sit amet\n",
					"pathVariables": {}
				},
				{
					"id": "dc8d6e30-c1cf-9d98-4b95-fc1ca6196511",
					"name": "Transform collection from format v2 to v1",
					"url": "https://postman-echo.com/transform/collection?from=2&to=1",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "from",
							"value": "2"
						},
						{
							"key": "to",
							"value": "1"
						}
					],
					"auth": null,
					"events": null,
					"folder": "084b21bd-d250-180b-5ed8-94cfaca39fdd",
					"responses": [
						{
							"id": "a5a669db-6b5f-89bb-62a0-6debe73f491f",
							"name": "Sample v1 Response",
							"status": "",
							"mime": "",
							"language": "json",
							"text": "{\"id\":\"0c42230c-c8e4-4ca0-a4aa-d393971de8b8\",\"name\":\"Sample Postman Collection\",\"description\":\"A sample collection to demonstrate collections as a set of related requests\",\"order\":[\"3d04ed83-dc1e-40ec-923c-16aa92509e50\",\"e02f8160-fb41-4633-be80-cc7d701e85b4\",\"77bd6d4d-1060-4927-aa5c-dcdba7f750cf\"],\"folders\":[],\"requests\":[{\"id\":\"3d04ed83-dc1e-40ec-923c-16aa92509e50\",\"name\":\"A simple GET request\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"GET\",\"headers\":\"\",\"data\":[],\"rawModeData\":\"\",\"tests\":\"tests['response code is 200'] = (responseCode.code === 200);\",\"preRequestScript\":\"\",\"url\":\"https://postman-echo.com/get?source=newman-sample-github-collection\"},{\"id\":\"e02f8160-fb41-4633-be80-cc7d701e85b4\",\"name\":\"A simple POST request\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"POST\",\"headers\":\"Content-Type: text/plain\",\"dataMode\":\"raw\",\"data\":[],\"rawModeData\":\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\"url\":\"https://postman-echo.com/post\"},{\"id\":\"77bd6d4d-1060-4927-aa5c-dcdba7f750cf\",\"name\":\"A simple POST request with JSON body\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"POST\",\"headers\":\"Content-Type: application/json\",\"dataMode\":\"raw\",\"data\":[],\"rawModeData\":\"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\"url\":\"https://postman-echo.com/post\"}]}",
							"responseCode": {
								"code": 200,
								"name": "OK",
								"fromServer": true
							},
							"requestObject": {
								"url": "https://postman-echo.com/transform/collection?from=2&to=1",
								"headers": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"enabled": true,
										"description": "The mime type of this content",
										"disabled": false
									}
								],
								"data": "{\n  \"info\": {\n    \"name\": \"Sample Postman Collection\",\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n    \"description\": \"A sample collection to demonstrate collections as a set of related requests\"\n  },\n\n  \"item\": [{\n    \"name\": \"A simple GET request\",\n    \"event\": [{\n      \"listen\": \"test\",\n      \"script\": {\n        \"type\": \"text/javascript\",\n        \"exec\": [\"tests['response code is 200'] = (responseCode.code === 200);\"]\n      }\n    }],\n    \"request\": {\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\",\n      \"method\": \"GET\"\n    }\n  }, {\n    \"name\": \"A simple POST request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"text/plain\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"\n      }\n    }\n  }, {\n    \"name\": \"A simple POST request with JSON body\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"application/json\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"\n      }\n    }\n  }]\n}",
								"method": "POST",
								"dataMode": "raw"
							},
							"headers": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 11 Jan 2017 10:38:42 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"569-P9uLZEIyoPfMmQ+U0mTO1A\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.10.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3A55y5Ll7HpTzt_hKuw6N54k4N04ilmMdn.uCPCHttP5DmI%2BdBw2I9NZL55lFFOzz4XxS4qAHv47gI; Path=/; HttpOnly",
									"name": "set-cookie",
									"description": ""
								},
								{
									"key": "transfer-encoding",
									"value": "chunked",
									"name": "transfer-encoding",
									"description": ""
								}
							],
							"cookies": [
								{
									"url": "https://postman-echo.com/transform/collection?from=2&to=1",
									"name": "sails.sid",
									"value": "s%3A55y5Ll7HpTzt_hKuw6N54k4N04ilmMdn.uCPCHttP5DmI%2BdBw2I9NZL55lFFOzz4XxS4qAHv47gI",
									"domain": "postman-echo.com",
									"secure": false,
									"httpOnly": true,
									"expirationDate": 2147463847,
									"path": "/"
								}
							],
							"request": "dc8d6e30-c1cf-9d98-4b95-fc1ca6196511",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"rawModeData": "{\n  \"info\": {\n    \"name\": \"Sample Postman Collection\",\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n    \"description\": \"A sample collection to demonstrate collections as a set of related requests\"\n  },\n\n  \"item\": [{\n    \"name\": \"A simple GET request\",\n    \"event\": [{\n      \"listen\": \"test\",\n      \"script\": {\n        \"type\": \"text/javascript\",\n        \"exec\": [\"tests['response code is 200'] = (responseCode.code === 200);\"]\n      }\n    }],\n    \"request\": {\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\",\n      \"method\": \"GET\"\n    }\n  }, {\n    \"name\": \"A simple POST request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"text/plain\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"\n      }\n    }\n  }, {\n    \"name\": \"A simple POST request with JSON body\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"application/json\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"\n      }\n    }\n  }]\n}",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				},
				{
					"id": "e50f9111-3a52-a325-47f1-fc702bea1fff",
					"name": "Response Headers",
					"url": "https://postman-echo.com/response-headers?Content-Type=text/html&test=response_headers",
					"description": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "Content-Type",
							"value": "text/html"
						},
						{
							"key": "test",
							"value": "response_headers"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Body contains Content-Type\"] = responseBody.has(\"Content-Type\");",
									"tests[\"response headers have key sent as part of request\"] = (postman.getResponseHeader('test') == 'response_headers')"
								]
							}
						}
					],
					"folder": "5d3595b3-5e8e-9e33-05ed-855c77298e4e",
					"responses": [
						{
							"id": "85a7208f-3c37-f297-9772-81b97d28dae0",
							"name": "Response headers",
							"status": "",
							"mime": "",
							"language": "html",
							"text": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
							"responseCode": {
								"code": 200,
								"name": "OK"
							},
							"requestObject": {
								"url": "https://echo.getpostman.com/response-headers?Content-Type=text/html&test=response_headers",
								"headers": [],
								"data": [],
								"method": "GET",
								"dataMode": "params"
							},
							"headers": [
								{
									"name": "Access-Control-Allow-Credentials",
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Headers",
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Methods",
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"description": ""
								},
								{
									"name": "Access-Control-Allow-Origin",
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"description": ""
								},
								{
									"name": "Connection",
									"key": "Connection",
									"value": "keep-alive",
									"description": ""
								},
								{
									"name": "Content-Encoding",
									"key": "Content-Encoding",
									"value": "gzip",
									"description": ""
								},
								{
									"name": "Content-Length",
									"key": "Content-Length",
									"value": "71",
									"description": ""
								},
								{
									"name": "Content-Type",
									"key": "Content-Type",
									"value": "text/html; charset=utf-8",
									"description": ""
								},
								{
									"name": "Date",
									"key": "Date",
									"value": "Thu, 31 Mar 2016 11:14:18 GMT",
									"description": ""
								},
								{
									"name": "Server",
									"key": "Server",
									"value": "nginx/1.6.2",
									"description": ""
								},
								{
									"name": "Vary",
									"key": "Vary",
									"value": "Accept-Encoding",
									"description": ""
								},
								{
									"name": "X-Powered-By",
									"key": "X-Powered-By",
									"value": "Sails <sailsjs.org>",
									"description": ""
								},
								{
									"name": "test",
									"key": "test",
									"value": "response_headers",
									"description": ""
								}
							],
							"cookies": [
								{
									"domain": "echo.getpostman.com",
									"hostOnly": true,
									"httpOnly": true,
									"name": "sails.sid",
									"path": "/",
									"secure": false,
									"session": true,
									"storeId": "0",
									"value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
								}
							],
							"request": "e50f9111-3a52-a325-47f1-fc702bea1fff",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"preRequestScript": null,
					"tests": "tests[\"Body contains Content-Type\"] = responseBody.has(\"Content-Type\");\ntests[\"response headers have key sent as part of request\"] = (postman.getResponseHeader('test') == 'response_headers')",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "e8a83301-4e86-1e6c-e88c-2cbedc1524d6",
					"name": "Object representation",
					"url": "https://postman-echo.com/time/start?timestamp=2016-10-10&unit=month",
					"description": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						},
						{
							"key": "unit",
							"value": "month"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var object = JSON.parse(responseBody);",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "var object = JSON.parse(responseBody);\n\ntests[\"Status code is 200\"] = responseCode.code === 200;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "f922a99e-6e96-ded7-ac6f-3ca6f958987d",
					"name": "Extract timestamp unit",
					"url": "https://postman-echo.com/time/unit?timestamp=2016-10-10&unit=day",
					"description": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "timestamp",
							"value": "2016-10-10"
						},
						{
							"key": "unit",
							"value": "day"
						}
					],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var unit = JSON.parse(responseBody).unit;",
									"",
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"tests[\"Returned unit is valid\"] = unit === 1;",
									""
								]
							}
						}
					],
					"folder": "74a8adf0-4f3f-068a-7c35-9745aa7b57d1",
					"preRequestScript": null,
					"tests": "var unit = JSON.parse(responseBody).unit;\n\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Returned unit is valid\"] = unit === 1;\n",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "fd961ad0-ab24-68d8-4be5-573e8585d526",
					"name": "GZip Compressed Response",
					"url": "https://postman-echo.com/gzip",
					"description": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
					"data": [],
					"dataMode": "params",
					"headerData": [],
					"method": "GET",
					"pathVariableData": [],
					"queryParams": [],
					"auth": null,
					"events": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"try {",
									"    var data = JSON.parse(responseBody);",
									"    tests[\"Body contains gzipped\"] = responseBody.has(\"gzipped\");",
									"    tests[\"Body contains headers\"] = responseBody.has(\"headers\");",
									"    tests[\"Body contains method\"] = responseBody.has(\"method\");",
									"}",
									"catch(e) {",
									"    console.log('Cannot parse response,probably not a JSON');",
									"}",
									"tests[\"response code is 200\"] = responseCode.code === 200;"
								]
							}
						}
					],
					"folder": "930f54b4-c5cd-2363-7cf5-b9022d3c0aae",
					"preRequestScript": null,
					"tests": "try {\n    var data = JSON.parse(responseBody);\n    tests[\"Body contains gzipped\"] = responseBody.has(\"gzipped\");\n    tests[\"Body contains headers\"] = responseBody.has(\"headers\");\n    tests[\"Body contains method\"] = responseBody.has(\"method\");\n}\ncatch(e) {\n    console.log('Cannot parse response,probably not a JSON');\n}\ntests[\"response code is 200\"] = responseCode.code === 200;",
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"headers": "",
					"pathVariables": {}
				},
				{
					"id": "fffc59d5-1e2d-ccc8-2101-2f7b9216be40",
					"name": "Transform collection from format v1 to v2",
					"url": "https://postman-echo.com/transform/collection?from=1&to=2",
					"description": "",
					"data": [],
					"dataMode": "raw",
					"headerData": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"method": "POST",
					"pathVariableData": [],
					"queryParams": [
						{
							"key": "from",
							"value": "1"
						},
						{
							"key": "to",
							"value": "2"
						}
					],
					"auth": null,
					"events": null,
					"folder": "084b21bd-d250-180b-5ed8-94cfaca39fdd",
					"responses": [
						{
							"id": "1ae2f3c1-9bde-e8f1-273c-82532812f931",
							"name": "Sample v2 Response",
							"status": "",
							"mime": "",
							"language": "json",
							"text": "{\"variables\":[],\"info\":{\"name\":\"Sample Postman Collection\",\"_postman_id\":\"7875be4b-917d-4aff-8cc4-5606c36bf418\",\"description\":\"A sample collection to demonstrate collections as a set of related requests\",\"schema\":\"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"},\"item\":[{\"name\":\"A simple GET request\",\"event\":[{\"listen\":\"test\",\"script\":{\"type\":\"text/javascript\",\"exec\":[\"tests['response code is 200'] = (responseCode.code === 200);\"]}}],\"request\":{\"url\":\"https://postman-echo.com/get?source=newman-sample-github-collection\",\"method\":\"GET\",\"header\":[],\"body\":{\"mode\":\"raw\",\"raw\":\"\"}},\"response\":[]},{\"name\":\"A simple POST request\",\"request\":{\"url\":\"https://postman-echo.com/post\",\"method\":\"POST\",\"header\":[{\"key\":\"Content-Type\",\"value\":\"text/plain\",\"description\":\"\"}],\"body\":{\"mode\":\"raw\",\"raw\":\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"}},\"response\":[]},{\"name\":\"A simple POST request with JSON body\",\"request\":{\"url\":\"https://postman-echo.com/post\",\"method\":\"POST\",\"header\":[{\"key\":\"Content-Type\",\"value\":\"application/json\",\"description\":\"\"}],\"body\":{\"mode\":\"raw\",\"raw\":\"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"}},\"response\":[]}]}",
							"responseCode": {
								"code": 200,
								"name": "OK",
								"fromServer": true
							},
							"requestObject": {
								"url": "https://postman-echo.com/transform/collection?from=1&to=2",
								"headers": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"enabled": true,
										"description": "The mime type of this content",
										"disabled": false
									}
								],
								"data": "{\n  \"id\": \"7875be4b-917d-4aff-8cc4-5606c36bf418\",\n  \"name\": \"Sample Postman Collection\",\n  \"description\": \"A sample collection to demonstrate collections as a set of related requests\",\n  \"order\": [\n    \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n    \"141ba274-cc50-4377-a59c-e080066f375e\",\n    \"4511ca8b-0bc7-430f-b894-a7ec1036f322\"\n  ],\n  \"folders\": [],\n  \"requests\": [\n    {\n      \"id\": \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n      \"name\": \"A simple GET request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"GET\",\n      \"headers\": \"\",\n      \"data\": [],\n      \"rawModeData\": \"\",\n      \"tests\": \"tests['response code is 200'] = (responseCode.code === 200);\",\n      \"preRequestScript\": \"\",\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\"\n    },\n    {\n      \"id\": \"141ba274-cc50-4377-a59c-e080066f375e\",\n      \"name\": \"A simple POST request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: text/plain\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\n      \"url\": \"https://postman-echo.com/post\"\n    },\n    {\n      \"id\": \"4511ca8b-0bc7-430f-b894-a7ec1036f322\",\n      \"name\": \"A simple POST request with JSON body\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: application/json\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\n      \"url\": \"https://postman-echo.com/post\"\n    }\n  ]\n}",
								"method": "POST",
								"dataMode": "raw"
							},
							"headers": [
								{
									"key": "Access-Control-Allow-Credentials",
									"value": "",
									"name": "Access-Control-Allow-Credentials",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Headers",
									"value": "",
									"name": "Access-Control-Allow-Headers",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Methods",
									"value": "",
									"name": "Access-Control-Allow-Methods",
									"description": ""
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "",
									"name": "Access-Control-Allow-Origin",
									"description": ""
								},
								{
									"key": "Access-Control-Expose-Headers",
									"value": "",
									"name": "Access-Control-Expose-Headers",
									"description": ""
								},
								{
									"key": "Connection",
									"value": "keep-alive",
									"name": "Connection",
									"description": ""
								},
								{
									"key": "Content-Encoding",
									"value": "gzip",
									"name": "Content-Encoding",
									"description": ""
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8",
									"name": "Content-Type",
									"description": ""
								},
								{
									"key": "Date",
									"value": "Wed, 11 Jan 2017 10:41:32 GMT",
									"name": "Date",
									"description": ""
								},
								{
									"key": "ETag",
									"value": "W/\"4cc-7P727Clhlrl9+b1/vneniw\"",
									"name": "ETag",
									"description": ""
								},
								{
									"key": "Server",
									"value": "nginx/1.10.1",
									"name": "Server",
									"description": ""
								},
								{
									"key": "Vary",
									"value": "X-HTTP-Method-Override, Accept-Encoding",
									"name": "Vary",
									"description": ""
								},
								{
									"key": "set-cookie",
									"value": "sails.sid=s%3AHtnQ1hlPxoj7wZahoNkcjN-aw9nQL0fc.KSyfLbEKhv1Lt3LvH13Ogjv9ENZgsBBSM6V8Y7TqVOU; Path=/; HttpOnly",
									"name": "set-cookie",
									"description": ""
								},
								{
									"key": "transfer-encoding",
									"value": "chunked",
									"name": "transfer-encoding",
									"description": ""
								}
							],
							"cookies": [
								{
									"url": "https://postman-echo.com/transform/collection?from=1&to=2",
									"name": "sails.sid",
									"value": "s%3AHtnQ1hlPxoj7wZahoNkcjN-aw9nQL0fc.KSyfLbEKhv1Lt3LvH13Ogjv9ENZgsBBSM6V8Y7TqVOU",
									"domain": "postman-echo.com",
									"secure": false,
									"httpOnly": true,
									"expirationDate": 2147463847,
									"path": "/"
								}
							],
							"request": "fffc59d5-1e2d-ccc8-2101-2f7b9216be40",
							"collection": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
						}
					],
					"currentHelper": null,
					"helperAttributes": null,
					"collectionId": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
					"rawModeData": "{\n  \"id\": \"7875be4b-917d-4aff-8cc4-5606c36bf418\",\n  \"name\": \"Sample Postman Collection\",\n  \"description\": \"A sample collection to demonstrate collections as a set of related requests\",\n  \"order\": [\n    \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n    \"141ba274-cc50-4377-a59c-e080066f375e\",\n    \"4511ca8b-0bc7-430f-b894-a7ec1036f322\"\n  ],\n  \"folders\": [],\n  \"requests\": [\n    {\n      \"id\": \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n      \"name\": \"A simple GET request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"GET\",\n      \"headers\": \"\",\n      \"data\": [],\n      \"rawModeData\": \"\",\n      \"tests\": \"tests['response code is 200'] = (responseCode.code === 200);\",\n      \"preRequestScript\": \"\",\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\"\n    },\n    {\n      \"id\": \"141ba274-cc50-4377-a59c-e080066f375e\",\n      \"name\": \"A simple POST request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: text/plain\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\n      \"url\": \"https://postman-echo.com/post\"\n    },\n    {\n      \"id\": \"4511ca8b-0bc7-430f-b894-a7ec1036f322\",\n      \"name\": \"A simple POST request with JSON body\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: application/json\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\n      \"url\": \"https://postman-echo.com/post\"\n    }\n  ]\n}",
					"headers": "Content-Type: application/json\n",
					"pathVariables": {}
				}
			]
		}
	],
	"environments": [
		{
			"id": "58aa11a3-6735-4d0d-af3a-113627024a89",
			"name": "AL-AWS-test.autolife.ca",
			"values": [
				{
					"key": "api-url",
					"value": "13.58.34.191",
					"enabled": true,
					"type": "text"
				},
				{
					"key": "username",
					"value": "vishalanil@gmail.com",
					"enabled": true,
					"type": "text"
				},
				{
					"key": "password",
					"value": "test",
					"enabled": true,
					"type": "text"
				}
			]
		},
		{
			"id": "1baa9c2e-f6ba-4050-9e37-882cd1505327",
			"name": "My Workspace - globals",
			"values": [
				{
					"key": "echo_digest_realm",
					"value": "Users",
					"enabled": true,
					"type": "text"
				},
				{
					"key": "echo_digest_nonce",
					"value": "1llEBG4iIPw27UfM8aUFu7avxlgbselw",
					"enabled": true,
					"type": "text"
				}
			]
		}
	],
	"headerPresets": [],
	"globals": []
}